{"version":3,"sources":["World.js","Agent.js","ConwayAgent.js","SimControl.js","CameraControl.js","App.js","serviceWorker.js","index.js"],"names":["World","x","y","z","Agent","context","radio","id","world","size","rotx","roty","rotz","marked","this","THREE","state","createMesh","neighbors","Error","val","i","group","children","length","remove","add","mesh","geometry","SphereGeometry","Math","PI","material","MeshBasicMaterial","color","marker","Mesh","position","copy","Vector3","rotation","Group","time","push","index","indexOf","splice","msg","States","Messages","ConwayAgent","params","alive","debugSim","debugNetwork","lastStateSend","lastCycle","neighborState","Map","setAlive","batch","aliveCount","setHex","stateSendTime","command","console","log","sendMessage","cycleTime","forEach","k","v","random","spontaneousGeneration","resurrectionChance","wrapper","JSON","stringify","set","from","ConwayControl","props","useState","startPattern","setStartPattern","setSize","setCycleTime","setSpontaneousGeneration","setResurrectionChance","style","width","border","padding","onSubmit","evt","preventDefault","paramsChangedAction","height","margin","display","marginTop","label","options","value","onChange","e","target","required","parseInt","type","memo","onClick","playAction","pauseAction","stepAction","resetAction","maxWidth","delta","clock","App","debugNeighbors","showNeighborsFor","messages","simPaused","pauseTime","Number","MAX_SAFE_INTEGER","lastLoopTime","Date","getTime","agentParams","worldSetup","agentSetup","pattern","test","agents","px","py","agent","sceneSetup","el","clientWidth","clientHeight","scene","camera","controls","OrbitControls","renderer","appendChild","domElement","addCustomSceneObjects","n","getMesh","calcAgentNeighbors","lights","startAnimationLoop","requestID","window","requestAnimationFrame","now","setState","to","receiveMessage","loop","render","getDelta","handleWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","dispose","max","agentIdx","distances","pos","getPosition","dist","distanceToSquared","sort","a","b","len","min","setNeighbors","getNeighbors","setMarked","milliseconds","date","currentDate","reset","handleSimReset","getMarked","isAlive","key","markNeighbors","row","showAliveCount","handleSimStep","ref","onKeyPress","handleKeyPressed","autoFocus","handleSimPause","handleSimPlay","handleCameraReset","param","handleAgentParamsChanged","Component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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E,EAAE,EAAE,EAAE,IA2Ef,MACF,IAAK,SACHA,EA7DO,CACX,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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","file":"static/js/main.ffa6855e.chunk.js","sourcesContent":["// World Environmental State.  Provides values based on x,y,z location in meters\r\nexport class World {\r\n  getTemperature(x,y,z) {\r\n    return 70;\r\n  }\r\n\r\n  getHumidity(x,y,z) {\r\n    return 70;\r\n  }\r\n}","/*\r\n Agent class.  An agent is a separate individual that communicates via messages to other agents.\r\n\r\n It contains a 3D representation implemented via three.js classes\r\n It contains a 2D parameter setup representation implemented via React components\r\n */\r\nexport class Agent {\r\n  marked = false;\r\n\r\n  constructor(context,radio,id,world,size,x,y,z,rotx=0,roty=0,rotz=0) {\r\n    this.THREE = context;\r\n    this.radio = radio;\r\n    this.id = id;\r\n    this.size = size;\r\n    this.world = world;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.rotx = rotx;\r\n    this.roty = roty;\r\n    this.rotz = rotz;\r\n    this.state = {};\r\n\r\n    this.createMesh();\r\n    this.neighbors = [];\r\n\r\n    // Validate to catch runtime bugs\r\n    if (typeof id === \"undefined\") {\r\n      throw new Error(\"Agent.id must be set\");\r\n    }\r\n  }\r\n\r\n  setMarked(val) {\r\n    this.marked = val;\r\n\r\n    for (let i = this.group.children.length - 1; i >= 0; i--) {\r\n      this.group.remove(this.group.children[i]);\r\n    }\r\n\r\n    this.group.add(this.mesh);\r\n\r\n    if (!this.marked) return;\r\n\r\n    let geometry = new this.THREE.SphereGeometry(this.size*1.3, 24, 24,0,Math.PI*2,0,Math.PI/2);\r\n    let material = new this.THREE.MeshBasicMaterial({\r\n      color: 0xFF0000,\r\n    });\r\n    let marker = new this.THREE.Mesh(geometry, material);\r\n    marker.position.copy(new this.THREE.Vector3(this.x,this.y,this.z-this.size));\r\n    marker.rotation.x = this.rotx;\r\n    marker.rotation.y = this.roty;\r\n    marker.rotation.z = this.rotz;\r\n\r\n    this.group.add(marker);\r\n  }\r\n\r\n  getMarked() {\r\n    return this.marked;\r\n  }\r\n\r\n  // State should always be a single map for easier serialization\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getPosition() {\r\n    return new this.THREE.Vector3(this.x,this.y,this.z);\r\n  }\r\n\r\n  createMesh() {\r\n    this.geometry = new this.THREE.SphereGeometry(this.size, 24, 24,0,Math.PI*2,0,Math.PI/2);\r\n    this.material = new this.THREE.MeshBasicMaterial({\r\n      color: 0xFFFFFF,\r\n    });\r\n    this.mesh = new this.THREE.Mesh(this.geometry, this.material);\r\n    this.mesh.position.copy(new this.THREE.Vector3(this.x,this.y,this.z));\r\n    this.mesh.rotation.x = this.rotx;\r\n    this.mesh.rotation.y = this.roty;\r\n    this.mesh.rotation.z = this.rotz;\r\n\r\n    this.group = new this.THREE.Group();\r\n    this.group.add(this.mesh);\r\n  }\r\n\r\n  // Called only once.  You may modify it but cannot reallocate it.\r\n  getMesh() {\r\n    return this.group;\r\n  }\r\n\r\n  // Simulation methods\r\n  loop(time) {\r\n\r\n  }\r\n\r\n  setNeighbors(val) {\r\n    this.neighbors = [...val];\r\n  }\r\n\r\n  getNeighbors() {\r\n    return this.neighbors;\r\n  }\r\n\r\n  addNeighbor(id) {\r\n    this.neighbors.push(id);\r\n  }\r\n\r\n  removeNeighbor(id) {\r\n    let index = this.neighbors.indexOf(id);\r\n    if (index !== -1) this.neighbors.splice(index,1);\r\n  }\r\n\r\n  receiveMessage(msg) {\r\n  }\r\n\r\n  // simulator.sendMessage(id,msg) - Sends a message to another Agent.  Has a variable delay\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport {Agent} from \"./Agent\";\r\nimport {Button} from \"@rmwc/button\";\r\nimport {TextField} from \"@rmwc/textfield\"\r\nimport {Select} from \"@rmwc/select\"\r\n\r\nimport '@material/textfield/dist/mdc.textfield.css';\r\nimport '@rmwc/select/select.css';\r\nimport '@material/select/dist/mdc.select.css';\r\nimport '@material/floating-label/dist/mdc.floating-label.css';\r\nimport '@material/notched-outline/dist/mdc.notched-outline.css';\r\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\r\nimport '@material/list/dist/mdc.list.css';\r\nimport '@material/menu/dist/mdc.menu.css';\r\nimport '@material/menu-surface/dist/mdc.menu-surface.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\n\r\nconst States = {Idle:\"Idle\",Sensing:\"Sensing\"};\r\nconst Messages = {AreYouAlive:\"AreYouAlive\",ImAlive:\"ImAlive\",ImDead:\"ImDead\",Resurrect:\"Resurrect\"};\r\n\r\n\r\n/*\r\nAgent based on Conway's Game of Life\r\n */\r\nexport class ConwayAgent extends Agent {\r\n  debugSim = false;\r\n  debugNetwork = false;\r\n  lastStateSend = 0;\r\n  lastCycle = 0;\r\n  neighborState = new Map();\r\n\r\n  constructor(context,radio,id,world,size,x,y,z,rotx=0,roty=0,rotz=0,params,alive) {\r\n    super(context,radio,id,world,size,x,y,z,rotx,roty,rotz);\r\n\r\n    this.params = params;\r\n    this.setAlive(alive);\r\n    this.state.lastCycle = 0;\r\n    this.state.state = States.Idle;\r\n    this.state.batch = 0;\r\n    this.state.aliveCount = 0;\r\n  }\r\n\r\n  setAlive(alive) {\r\n    this.state.alive = alive;\r\n\r\n    if (alive) {\r\n      this.material.color.setHex(0x0000FF);\r\n    } else {\r\n      this.material.color.setHex(0x222222);\r\n    }\r\n  }\r\n\r\n  isAlive() {\r\n    return this.state.alive;\r\n  }\r\n\r\n  loop(time) {\r\n    if (time > this.lastStateSend + this.params.stateSendTime) {\r\n      this.lastStateSend = time;\r\n      let msg = {command:this.state.alive ?Messages.ImAlive:Messages.ImDead};\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Sending state: \" + this.state.alive + \" to neighbors: \" + this.neighbors.length);\r\n        //console.log(JSON.stringify(msg));\r\n      }\r\n      for(let i=0; i < this.neighbors.length; i++) {\r\n        this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n      }\r\n    }\r\n\r\n    if (this.debugSim && this.id === 0) console.log(\"Check cycle.  time: \" + time + \" next: \" + (this.lastCycle + this.params.cycleTime) + \" lastCycle: \" + this.lastCycle + \" cycleTime: \" + this.params.cycleTime);\r\n    if (time > this.lastCycle + this.params.cycleTime) {\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Cycle done.  Updating state.  neighbors: \" + this.neighborState.size);\r\n      }\r\n      this.lastCycle = time;\r\n      let aliveCount = 0;\r\n      this.neighborState.forEach( (k,v) => {\r\n        if (this.debugSim && this.id === 0) console.log(k, v);\r\n        if (k) {\r\n          aliveCount++;\r\n        }\r\n      } );\r\n      /*\r\n      for(let [k,v] of this.neighborState) {\r\n        if (v === true) aliveCount++;\r\n        if (this.debugSim && this.id === 0) {\r\n          //console.log(\"Agent: \" + k + \" alive: \" + v);\r\n        }\r\n      }\r\n       */\r\n\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Agent: \" + this.id + \" aliveN: \" + aliveCount);\r\n      }\r\n      if (this.state.alive === true && (aliveCount === 2 || aliveCount === 3)) {\r\n        this.setAlive(true);\r\n      } else if (this.state.alive === false) {\r\n\r\n        if (aliveCount === 3) {\r\n          this.setAlive(true);\r\n        } else {\r\n          if (Math.random() < this.params.spontaneousGeneration) {\r\n            //console.log(\"Spontanous Generate\");\r\n            this.setAlive(true);\r\n            if (Math.random() < this.params.resurrectionChance) {\r\n              //console.log(\"Awake my brothers!\");\r\n              // Resurrect your neighbors\r\n              for(let i=0; i < this.neighbors.length; i++) {\r\n                let msg = {command:Messages.Resurrect};\r\n                this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.setAlive(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Receive a network message.  Contains from,to,msg properties\r\n  receiveMessage(wrapper) {\r\n    if (this.debugNetwork && this.id === 0) {\r\n      console.log(\"Agent: \" + this.id + \" recv: \" + JSON.stringify(wrapper));\r\n    }\r\n\r\n    let msg = wrapper.msg;\r\n\r\n    switch(msg.command) {\r\n      case Messages.Resurrect:\r\n        let r = Math.random();\r\n        //console.log(\"Got resurrect.  rolled: \" + r + \" vs: \" + this.params.resurrectionChance);\r\n        if (r < this.params.resurrectionChance) {\r\n          //console.log(\"Jesus!\");\r\n          this.setAlive(true);\r\n        }\r\n        break;\r\n      case Messages.ImAlive:\r\n        this.neighborState.set(wrapper.from,true);\r\n        break;\r\n      case Messages.ImDead:\r\n        this.neighborState.set(wrapper.from,false);\r\n        break;\r\n      default:\r\n        // ignore\r\n        break;\r\n    }\r\n  }\r\n\r\n  /*\r\n    // Simulation methods\r\n    loop(time) {\r\n      if (this.state.state === States.Idle) {\r\n        //if (this.id === 0) console.log(\"time: \" + time + \" next: \" + (this.state.lastCycle + this.params.cycleTime));\r\n        if (time < this.state.lastCycle + this.params.cycleTime) return;\r\n\r\n        if (this.debugSim && this.id == 0) {\r\n          console.log(\"Start Sensing: \" + time);\r\n        }\r\n\r\n        this.state.state = States.Sensing;\r\n        this.state.startedSensing = time;\r\n        this.state.batch = this.state.batch + 1;\r\n        this.state.aliveCount = 0;\r\n\r\n        // Query our neighbors.\r\n        for(let i=0; i < this.neighbors.length; i++) {\r\n          let msg = {command:Messages.AreYouAlive, batch:this.state.batch};\r\n          this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n        }\r\n      } else if (this.state.state === States.Sensing) {\r\n        if (time > this.state.startedSensing + this.params.cycleTime) {\r\n          if (this.debugSim && this.id == 0) {\r\n            console.log(\"End Sensing: \" + time)\r\n          }\r\n          // We've collected as many answers as we are going to get\r\n          if (this.state.alive === true && (this.state.aliveCount === 2 || this.state.aliveCount === 3)) {\r\n            this.setAlive(true);\r\n          } else if (this.state.alive === false) {\r\n\r\n            if (this.state.aliveCount === 3) {\r\n              this.setAlive(true);\r\n            } else {\r\n              if (Math.random() < this.params.spontaneousGeneration) {\r\n                //console.log(\"Spontanous Generate\");\r\n                this.setAlive(true);\r\n                if (Math.random() < this.params.resurrectionChance) {\r\n                  //console.log(\"Awake my brothers!\");\r\n                  // Resurrect your neighbors\r\n                  for(let i=0; i < this.neighbors.length; i++) {\r\n                    let msg = {command:Messages.Resurrect};\r\n                    this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            this.setAlive(false);\r\n          }\r\n\r\n          this.state.state = States.Idle;\r\n          this.state.lastCycle = time;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Receive a network message.  Contains from,to,msg properties\r\n    receiveMessage(wrapper) {\r\n      if (this.debugNetwork) {\r\n        console.log(\"Agent: \" + this.id + \" recv: \" + JSON.stringify(wrapper));\r\n      }\r\n\r\n      let msg = wrapper.msg;\r\n\r\n      if (msg.command === Messages.Resurrect) {\r\n        let r = Math.random();\r\n        //console.log(\"Got resurrect.  rolled: \" + r + \" vs: \" + this.params.resurrectionChance);\r\n        if (r < this.params.resurrectionChance) {\r\n          //console.log(\"Jesus!\");\r\n          this.setAlive(true);\r\n        }\r\n      }\r\n\r\n      if (this.state.state !== States.Sensing) {\r\n        if (this.debugNetwork) {\r\n          console.log(\"Agent: \" + this.id + \" ignored.  Not Sensing\");\r\n        }\r\n        // ignore\r\n        return;\r\n      }\r\n\r\n      switch(msg.command) {\r\n        case Messages.ImAlive:\r\n          if (msg.batch !== this.state.batch) {\r\n            // ignore old batch answer\r\n            return;\r\n          }\r\n\r\n          this.state.aliveCount++;\r\n          break;\r\n        case Messages.AreYouAlive:\r\n          if (this.state.alive === true) {\r\n            this.radio.sendMessage(this.id, wrapper.from, {command: Messages.ImAlive, batch: msg.batch})\r\n          }\r\n          // Do not send a message if dead to preserve bandwidth\r\n          break;\r\n      }\r\n    }\r\n  */\r\n\r\n  render() {\r\n    return <div><h1>Game of Life</h1></div>\r\n  }\r\n}\r\n\r\nexport function ConwayControl(props) {\r\n  const [startPattern,setStartPattern] = useState(props.startPattern);\r\n  const [size,setSize] = useState(props.size);\r\n  const [cycleTime, setCycleTime] = useState(props.cycleTime);\r\n  const [spontaneousGeneration, setSpontaneousGeneration] = useState(props.spontaneousGeneration);\r\n  const [resurrectionChance,setResurrectionChance] = useState(props.resurrectionChance);\r\n\r\n  const submit = (evt) => {\r\n    if (evt) evt.preventDefault();\r\n\r\n    props.paramsChangedAction({\r\n      startPattern:startPattern,\r\n      size:size,\r\n      cycleTime:cycleTime,\r\n      spontaneousGeneration:spontaneousGeneration,\r\n      resurrectionChance:resurrectionChance\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      width:\"512px\",\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>Game of Life - Agent Control</h1>\r\n      <form onSubmit={submit}>\r\n        <Select style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}\r\n          label=\"Start Pattern\" options={[\"toad\",\"beacon\",\"blinker\",\"random\",\"corners\",\"blank\",\"quadpole\",\"pulsar\",\"test\"]} value={startPattern} onChange={e => setStartPattern(e.target.value)} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Size\" required value={size} onChange={e => setSize(parseInt(e.target.value))} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"CycleTime\" required value={cycleTime} onChange={e => setCycleTime(parseInt(e.target.value))} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Spontaneous Generation\" required value={spontaneousGeneration} onChange={e => setSpontaneousGeneration(e.target.value)} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Resurrection Chance\" required value={resurrectionChance} onChange={e => setResurrectionChance(e.target.value)} />\r\n        <Button style={{\r\n          width:\"100%\"\r\n        }} type=\"submit\" label=\"Update\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { memo } from \"react\";\r\n\r\nimport { Button } from \"@rmwc/button\"\r\n\r\nimport '@material/button/dist/mdc.button.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\n\r\n/*\r\n Simulation Control Component\r\n\r\n  props:\r\n     resetAction\r\n     pauseAction\r\n     playAction\r\n */\r\nfunction SimControl(props) {\r\n  return (\r\n    <div style={{\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>Simulation Control</h1>\r\n      <div style={{width:\"100px\",margin:\"auto\"}}><b>time: {props.time}</b></div>\r\n      <Button label=\"Play\" onClick={props.playAction} />\r\n      <Button label=\"Pause\" onClick={props.pauseAction}/>\r\n      <Button label=\"Step\" onClick={props.stepAction}/>\r\n      <Button label=\"Reset\" onClick={props.resetAction} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(SimControl);\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Button } from \"@rmwc/button\"\r\n\r\nimport '@material/button/dist/mdc.button.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\n\r\n/*\r\n Simulation Control Component\r\n\r\n  props:\r\n     resetAction\r\n     pauseAction\r\n     playAction\r\n */\r\nfunction CameraControl(props) {\r\n  return (\r\n    <div style={{\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>Camera Control</h1>\r\n      <Button label=\"Reset\" onClick={props.resetAction} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(CameraControl);\r\n","import React, { Component, memo } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { World } from \"./World\"\nimport { ConwayAgent,ConwayControl } from \"./ConwayAgent\"\nimport SimControl from \"./SimControl\"\nimport CameraControl from \"./CameraControl\"\n\nconst style = {\n  height: 512,\n  maxWidth: 1024\n};\n\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 30;\n\nconst transmissionDelayMax = 0;  // ms max\n\nclass App extends Component {\n  state = {}\n  debugNetwork = false;\n  debugNeighbors = false;\n  showNeighborsFor = -1;\n  messages = [];\n  simPaused = true;\n  pauseTime = Number.MAX_SAFE_INTEGER;\n  time = 0;  // Simulation time\n  lastLoopTime = new Date().getTime();\n\n  agentParams = {startPattern:\"pulsar\", size: 10,\n    cycleTime: 400,\n    stateSendTime: 50,\n    spontaneousGeneration: 0.001*0,\n    resurrectionChance: 0.5*0};\n\n  componentDidMount() {\n    this.worldSetup();\n    this.agentSetup(this.agentParams);\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n\n    this.setState({time:0});\n\n    // Render once so we see the initial pattern\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  // Setup the world environment.\n  worldSetup = () => {\n    this.world = new World();\n  };\n\n  // Setup the agents\n  agentSetup = (params) => {\n    let id = 0;\n\n    let random = false;\n    let chance = 0.4;\n    let quadpole = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,1,1,0,0,0,0,0,0,0],\n      [0,1,0,1,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,0,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,1,0,1,0,0],\n      [0,0,0,0,0,0,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let blank = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let corners = [\n      [1,1,0,0,0,0,0,0,1,1],\n      [1,0,0,0,0,0,0,0,0,1],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [1,0,0,0,0,0,0,0,0,1],\n      [1,1,0,0,0,0,0,0,1,1],\n    ];\n    let cool1 = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,0,0,0,0],\n      [0,0,0,1,1,1,1,0,0,0],\n      [0,0,0,0,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let toad = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0],\n      [0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let blinker = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let beacon = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let pulsar = [\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let test = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let pattern;\n\n    if (params.startPattern === \"random\") {\n      random = true;\n    } else {\n      switch(params.startPattern) {\n        case \"quadpole\":\n          pattern = quadpole;\n          break;\n        case \"blank\":\n          pattern = blank;\n          break;\n        case \"test\":\n          pattern = test;\n          break;\n        case \"corners\":\n          pattern = corners;\n          break;\n        case \"toad\":\n          pattern = toad;\n          break;\n        case \"beacon\":\n          pattern = beacon;\n          break;\n        case \"blinker\":\n          pattern = blinker;\n          break;\n        case \"pulsar\":\n          pattern = pulsar;\n          break;\n        default:\n          console.log(\"Unknown pattern\");\n          pattern = test;\n          break;\n      }\n    }\n\n    let size = params.size;\n    if (!random && size < pattern.length) {\n      size = pattern.length;\n    }\n\n    this.agents = [];\n\n    for(let y=0; y < size; y++) {\n      for(let x=0; x < size; x++) {\n        let alive = true;\n\n        let px = x;\n        let py = y;\n\n        if (random) {\n          alive = Math.random() < chance;\n        } else {\n          px = x;\n          py = size - y - 1;\n\n          alive = pattern[y][x] === 1;\n        }\n\n        const agent = new ConwayAgent(THREE,this,id++,this.world,0.1,px-size/2,py-size/2,0,Math.PI/2,0,0,params,alive);\n        //console.log(\"agent: \" + (id-1) + \" id: \" + (y * size + x) + \" x: \" + x + \" y: \" + y + \" alive: \" + alive);\n        this.agents[y * size + x] = agent;\n      }\n    }\n  };\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n    );\n    this.camera.position.z = 10; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n    this.controls = new OrbitControls(this.camera, this.el);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    for(let n=0; n < this.agents.length; n++) {\n      this.scene.add(this.agents[n].getMesh());\n    }\n\n    this.calcAgentNeighbors(8);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    //this.scene.add(lights[0]);\n    //this.scene.add(lights[1]);\n    //this.scene.add(lights[2]);\n  };\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    if (this.debugNeighbors) console.log(\"Calculating neighbors\");\n\n    for(let agentIdx=0; agentIdx < this.agents.length; agentIdx++) {\n      if (this.debugNeighbors) console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i !== agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(pos);\n          distances.push({dist: dist, agentIdx: i});\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      });\n      if (this.debugNeighbors) console.log(JSON.stringify(distances));\n\n      //console.log(distances);\n      let neighbors = [];\n      let len = Math.min(max,distances.length);\n\n      for(let i=0; i < len; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      if (this.debugNeighbors) console.log(JSON.stringify(neighbors));\n      this.agents[agentIdx].setNeighbors(neighbors);\n    }\n\n    if (this.showNeighborsFor !== -1) {\n      let neighbors = this.agents[this.showNeighborsFor].getNeighbors();\n      for(let i=0; i < neighbors.length; i++) {\n        this.agents[neighbors[i]].setMarked(true);\n      }\n    }\n  }\n\n  startAnimationLoop = () => {\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    let now = new Date().getTime();\n\n    if (!this.simPaused) {\n      // Handle delivery of messages\n      this.time += now - this.lastLoopTime;\n      this.setState({time:this.time});\n\n      let remove = [];\n      for (let i = 0; i < this.messages.length; i++) {\n        if (this.messages[i].time < this.time) {\n          if (this.debugNetwork) console.log(\"Routing message: \" + JSON.stringify(this.messages[i]));\n          if (typeof this.messages[i].to === 'undefined') {\n            console.log(\"Invalid message: \" + JSON.stringify(this.messages[i]))\n          } else {\n            this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n          }\n          remove.push(i);\n        }\n      }\n\n      for (let i = 0; i < remove.length; i++) {\n        this.messages.splice(remove[i] - i, 1);\n      }\n\n      // Handle clocking of agents\n      // TODO: Likely we should randomally walk for better simulation of real world parallelism\n      for (let i = 0; i < this.agents.length; i++) {\n        this.agents[i].loop(this.time);\n      }\n\n      //this.sleep(50);  // TODO: Remove this after debugging\n      if (this.time > this.pauseTime) {\n        this.simPaused = true;\n        this.renderer.render(this.scene, this.camera);\n        this.pauseTime = Number.MAX_SAFE_INTEGER;\n        return;\n      }\n    }\n\n    this.lastLoopTime = now;\n    delta += clock.getDelta();\n    if (delta < interval) {\n      return;\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    delta = delta % interval;\n  };\n\n  sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  sendMessage(from,to,msg) {\n    if (this.debugNetwork) {\n      console.log(\"Send message. from: \" + from + \" to: \" + to + \" msg: \" + JSON.stringify(msg));\n    }\n\n    if (typeof from === \"undefined\") {\n      throw new Error(\"From is required\");\n    }\n    if (typeof to === \"undefined\") {\n      throw new Error(\"To is required\");\n    }\n\n    this.messages.push({from:from,to:to,msg:msg,time: this.time + Math.random() * transmissionDelayMax});\n  }\n\n  handleSimPause() {\n    this.simPaused = true;\n  }\n\n  handleSimPlay() {\n    this.simPaused = false;\n    this.lastLoopTime = new Date().getTime();\n  }\n\n  // Play the sim for one cycle time\n  handleSimStep() {\n    this.simPaused = false;\n    this.lastLoopTime = new Date().getTime();\n    this.pauseTime = this.time + this.agentParams.cycleTime;\n  }\n\n  handleSimReset() {\n    this.simPaused = true;\n    this.time = 0;\n    this.setState({time:this.time});\n    this.lastLoopTime = new Date().getTime();\n    this.messages = [];\n\n    while(this.scene.children.length > 0){\n      this.scene.remove(this.scene.children[0]);\n    }\n\n    this.agentSetup(this.agentParams);\n    this.addCustomSceneObjects();\n  }\n\n  handleCameraReset() {\n    this.controls.reset();\n  }\n\n  handleAgentParamsChanged(params) {\n    console.log(\"Params changed: \" + JSON.stringify(params));\n\n    this.agentParams = {...this.agentParams,...params};\n\n    this.handleSimReset();\n  }\n\n  markNeighbors(agentIdx) {\n    // clear old\n    for(let i=0; i < this.agents.length; i++) {\n      this.agents[i].setMarked(false);\n    }\n\n    let neighbors = this.agents[agentIdx].getNeighbors();\n    for(let i=0; i < neighbors.length; i++) {\n      this.agents[neighbors[i]].setMarked(!this.agents[neighbors[i]].getMarked());\n    }\n  }\n\n  showAliveCount(agentIdx) {\n    console.log(\"Agent: \" + agentIdx);\n    const neighbors = this.agents[agentIdx].getNeighbors();\n    let aliveCount = 0;\n    for(let i=0; i < neighbors.length; i++) {\n      console.log(\"neighbor: \" + neighbors[i] + \" alive: \" + this.agents[neighbors[i]].isAlive());\n      if (this.agents[neighbors[i]].isAlive()) {\n        aliveCount++;\n      }\n    }\n    console.log(\"aliveCount: \" + aliveCount);\n\n  }\n\n  handleKeyPressed(e) {\n    let row = 9;\n    let size = 10;\n\n    switch(e.key) {\n      case '0':\n        this.markNeighbors(row * size + 0);\n        this.showAliveCount(row * size + 0);\n        break;\n      case '1':\n        this.markNeighbors(row * size + 1);\n        this.showAliveCount(row * size + 1);\n        break;\n      case '2':\n        this.markNeighbors(row * size + 2);\n        this.showAliveCount(row * size + 2);\n        break;\n      case '3':\n        this.markNeighbors(row * size + 3);\n        this.showAliveCount(row * size + 3);\n        break;\n      case '4':\n        this.markNeighbors(row * size + 4);\n        this.showAliveCount(row * size + 4);\n        break;\n      case '5':\n        this.markNeighbors(row * size + 5);\n        this.showAliveCount(row * size + 5);\n        break;\n      case '6':\n        this.markNeighbors(row * size + 6);\n        this.showAliveCount(row * size + 6);\n        break;\n      case '7':\n        this.markNeighbors(row * size + 7);\n        this.showAliveCount(row * size + 7);\n        break;\n      case '8':\n        this.markNeighbors(row * size + 8);\n        this.showAliveCount(row * size + 8);\n        break;\n      case '9':\n        this.markNeighbors(row * size + 9);\n        this.showAliveCount(row * size + 9);\n        break;\n      case 's':\n        this.handleSimStep();\n        break;\n      case 'c':\n        for(let i=0; i < this.agents.length; i++) {\n          this.agents[i].setMarked(false);\n        }\n        break;\n      default:\n        // ignore\n        break;\n    }\n  }\n\n  render() {\n    return <div>\n      <div style={style} ref={ref => (this.el = ref)} onKeyPress = {e => this.handleKeyPressed(e) } autoFocus />\n      <div style={{\n        display:\"flex\"\n      }} >\n        <div>\n        <SimControl time = {this.state.time} resetAction={e => this.handleSimReset()} pauseAction={e => this.handleSimPause() } playAction={e => this.handleSimPlay() } stepAction={e => this.handleSimStep() }/>\n        <CameraControl resetAction={e => this.handleCameraReset()} />\n        </div>\n        <ConwayControl {...this.agentParams} paramsChangedAction = {(param,val) => this.handleAgentParamsChanged(param,val) } />\n      </div>\n    </div>\n  }\n}\n\nexport default memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}