{"ast":null,"code":"import * as THREE from \"three\";\nexport class Agent {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.mesh = null;\n  }\n\n  getMesh() {\n    console.log(\"getting mesh\");\n\n    if (this.mesh === null) {\n      this.mesh = createMesh();\n    } else {\n      return this.mesh;\n    }\n  }\n\n  createMesh() {\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x156289,\n      emissive: 0x072534,\n      side: THREE.DoubleSide,\n      flatShading: true\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.translate(this.x, this.y, this.z);\n    return mesh;\n  }\n\n}","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/src/Agent.js"],"names":["THREE","Agent","constructor","x","y","z","mesh","getMesh","console","log","createMesh","geometry","BoxGeometry","material","MeshPhongMaterial","color","emissive","side","DoubleSide","flatShading","Mesh","translate"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAMC,KAAN,CAAY;AACjBC,EAAAA,WAAW,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAQ;AACjB,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AAEA,SAAKC,IAAL,GAAY,IAAZ;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAI,KAAKH,IAAL,KAAc,IAAlB,EAAwB;AACtB,WAAKA,IAAL,GAAYI,UAAU,EAAtB;AACD,KAFD,MAEQ;AACN,aAAO,KAAKJ,IAAZ;AACD;AACF;;AAEDI,EAAAA,UAAU,GAAG;AACX,UAAMC,QAAQ,GAAG,IAAIX,KAAK,CAACY,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAjB;AACA,UAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,iBAAV,CAA4B;AAC3CC,MAAAA,KAAK,EAAE,QADoC;AAE3CC,MAAAA,QAAQ,EAAE,QAFiC;AAG3CC,MAAAA,IAAI,EAAEjB,KAAK,CAACkB,UAH+B;AAI3CC,MAAAA,WAAW,EAAE;AAJ8B,KAA5B,CAAjB;AAMA,UAAMb,IAAI,GAAG,IAAIN,KAAK,CAACoB,IAAV,CAAeT,QAAf,EAAyBE,QAAzB,CAAb;AACAP,IAAAA,IAAI,CAACe,SAAL,CAAe,KAAKlB,CAApB,EAAsB,KAAKC,CAA3B,EAA6B,KAAKC,CAAlC;AAEA,WAAOC,IAAP;AACD;;AA9BgB","sourcesContent":["import * as THREE from \"three\";\r\n\r\nexport class Agent {\r\n  constructor(x,y,z) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n\r\n    this.mesh = null;\r\n  }\r\n\r\n  getMesh() {\r\n    console.log(\"getting mesh\");\r\n    if (this.mesh === null) {\r\n      this.mesh = createMesh();\r\n    }  else {\r\n      return this.mesh;\r\n    }\r\n  }\r\n\r\n  createMesh() {\r\n    const geometry = new THREE.BoxGeometry(2, 2, 2);\r\n    const material = new THREE.MeshPhongMaterial({\r\n      color: 0x156289,\r\n      emissive: 0x072534,\r\n      side: THREE.DoubleSide,\r\n      flatShading: true\r\n    });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.translate(this.x,this.y,this.z);\r\n\r\n    return mesh;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}