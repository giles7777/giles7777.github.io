{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline';\nexport var useNotchedOutlineFoundation = function useNotchedOutlineFoundation(props) {\n  var _a = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true,\n      notchedEl: true\n    },\n    foundation: function foundation(_a) {\n      var rootEl = _a.rootEl,\n          notchedEl = _a.notchedEl;\n      return new MDCNotchedOutlineFoundation({\n        addClass: function addClass(className) {\n          return rootEl.addClass(className);\n        },\n        removeClass: function removeClass(className) {\n          return rootEl.removeClass(className);\n        },\n        setNotchWidthProperty: function setNotchWidthProperty(width) {\n          return notchedEl.setStyle('width', width + 'px');\n        },\n        removeNotchWidthProperty: function removeNotchWidthProperty() {\n          return notchedEl.setStyle('width', '');\n        }\n      });\n    }\n  }),\n      foundation = _a.foundation,\n      elements = __rest(_a, [\"foundation\"]);\n\n  var rootEl = elements.rootEl;\n  var labelRef = useRef();\n  useEffect(function () {\n    !!props.notch ? foundation.notch(props.notch) : foundation.closeNotch();\n  }, [props.notch, foundation]);\n  useEffect(function () {\n    var _a;\n\n    labelRef.current = ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector('.mdc-floating-label')) || undefined;\n    var label = labelRef.current;\n\n    if (label) {\n      label.style.transitionDuration = '0s';\n      rootEl.addClass(MDCNotchedOutlineFoundation.cssClasses.OUTLINE_UPGRADED);\n      requestAnimationFrame(function () {\n        label && (label.style.transitionDuration = '');\n      });\n    } else {\n      rootEl.addClass(MDCNotchedOutlineFoundation.cssClasses.NO_LABEL);\n    }\n  }, [rootEl]);\n  return __assign({\n    foundation: foundation\n  }, elements);\n};","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/node_modules/@rmwc/notched-outline/next/foundation.js"],"names":["__assign","__rest","useEffect","useRef","useFoundation","MDCNotchedOutlineFoundation","useNotchedOutlineFoundation","props","_a","elements","rootEl","notchedEl","foundation","addClass","className","removeClass","setNotchWidthProperty","width","setStyle","removeNotchWidthProperty","labelRef","notch","closeNotch","current","ref","querySelector","undefined","label","style","transitionDuration","cssClasses","OUTLINE_UPGRADED","requestAnimationFrame","NO_LABEL"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { useEffect, useRef } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline';\nexport var useNotchedOutlineFoundation = function (props) {\n    var _a = useFoundation({\n        props: props,\n        elements: {\n            rootEl: true,\n            notchedEl: true\n        },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, notchedEl = _a.notchedEl;\n            return new MDCNotchedOutlineFoundation({\n                addClass: function (className) { return rootEl.addClass(className); },\n                removeClass: function (className) { return rootEl.removeClass(className); },\n                setNotchWidthProperty: function (width) {\n                    return notchedEl.setStyle('width', width + 'px');\n                },\n                removeNotchWidthProperty: function () { return notchedEl.setStyle('width', ''); }\n            });\n        }\n    }), foundation = _a.foundation, elements = __rest(_a, [\"foundation\"]);\n    var rootEl = elements.rootEl;\n    var labelRef = useRef();\n    useEffect(function () {\n        !!props.notch ? foundation.notch(props.notch) : foundation.closeNotch();\n    }, [props.notch, foundation]);\n    useEffect(function () {\n        var _a;\n        labelRef.current =\n            ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector('.mdc-floating-label')) || undefined;\n        var label = labelRef.current;\n        if (label) {\n            label.style.transitionDuration = '0s';\n            rootEl.addClass(MDCNotchedOutlineFoundation.cssClasses.OUTLINE_UPGRADED);\n            requestAnimationFrame(function () {\n                label && (label.style.transitionDuration = '');\n            });\n        }\n        else {\n            rootEl.addClass(MDCNotchedOutlineFoundation.cssClasses.NO_LABEL);\n        }\n    }, [rootEl]);\n    return __assign({ foundation: foundation }, elements);\n};\n"]},"metadata":{},"sourceType":"module"}