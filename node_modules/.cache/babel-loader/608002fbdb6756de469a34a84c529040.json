{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { classNames, useClassNames, Tag, createComponent } from '@rmwc/base';\nimport { withRipple } from '@rmwc/ripple';\nimport { Icon } from '@rmwc/icon';\n/** A ListItem component. */\n\nexport var ListItem = withRipple({\n  surface: false\n})(createComponent(function ListItem(props, ref) {\n  var selected = props.selected,\n      activated = props.activated,\n      disabled = props.disabled,\n      rest = __rest(props, [\"selected\", \"activated\", \"disabled\"]);\n\n  var className = useClassNames(props, ['mdc-list-item', {\n    'mdc-list-item--selected': props.selected,\n    'mdc-list-item--activated': props.activated,\n    'mdc-list-item--disabled': props.disabled\n  }]);\n  return React.createElement(Tag, __assign({\n    tag: \"li\",\n    tabIndex: 0\n  }, rest, {\n    className: className,\n    ref: ref\n  }));\n}));\n/** Text Wrapper for the ListItem */\n\nexport var ListItemText = createComponent(function ListItemText(props, ref) {\n  var className = useClassNames(props, ['mdc-list-item__text']);\n  return React.createElement(Tag, __assign({\n    tag: \"span\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Primary Text for the ListItem */\n\nexport var ListItemPrimaryText = createComponent(function ListItemPrimaryText(props, ref) {\n  var className = useClassNames(props, ['mdc-list-item__primary-text']);\n  return React.createElement(Tag, __assign({\n    tag: \"span\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** Secondary text for the ListItem */\n\nexport var ListItemSecondaryText = createComponent(function ListItemSecondaryText(props, ref) {\n  var className = useClassNames(props, ['mdc-list-item__secondary-text']);\n  return React.createElement(Tag, __assign({\n    tag: \"span\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A graphic / icon for the ListItem */\n\nexport var ListItemGraphic = createComponent(function ListItemGraphic(props, ref) {\n  var className = useClassNames(props, ['mdc-list-item__graphic']);\n  return React.createElement(Icon, __assign({}, props, {\n    \"aria-hidden\": \"true\",\n    ref: ref,\n    className: className\n  }));\n});\n/** Meta content for the ListItem. This can either by an icon by setting the `icon` prop, or any other kind of content. */\n\nexport var ListItemMeta = createComponent(function ListItemMeta(props, ref) {\n  var className = useClassNames(props, ['mdc-list-item__meta']);\n\n  if (!!props.icon) {\n    return React.createElement(Icon, __assign({}, props, {\n      \"aria-hidden\": \"true\",\n      ref: ref,\n      className: className\n    }));\n  }\n\n  if (React.isValidElement(props.children)) {\n    var children = props.children,\n        rest = __rest(props, [\"children\"]);\n\n    return React.cloneElement(props.children, __assign(__assign(__assign({}, rest), props.children.props), {\n      className: classNames(className, props.children.props.className)\n    }));\n  }\n\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A container to group ListItems */\n\nexport var ListGroup = createComponent(function ListGroup(props, ref) {\n  var className = useClassNames(props, ['mdc-list-group']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A subheader for the ListGroup */\n\nexport var ListGroupSubheader = createComponent(function ListGroupSubheader(props, ref) {\n  var className = useClassNames(props, ['mdc-list-group__subheader']);\n  return React.createElement(Tag, __assign({}, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A divider for the List */\n\nexport var ListDivider = createComponent(function ListDivider(props, ref) {\n  var className = useClassNames(props, ['mdc-list-divider']);\n  return React.createElement(Tag, __assign({\n    tag: \"li\",\n    role: \"separator\"\n  }, props, {\n    ref: ref,\n    className: className\n  }));\n});\n/** A simple list item template. */\n\nexport var SimpleListItem = createComponent(function (_a, ref) {\n  var text = _a.text,\n      secondaryText = _a.secondaryText,\n      graphic = _a.graphic,\n      metaIcon = _a.metaIcon,\n      meta = _a.meta,\n      children = _a.children,\n      rest = __rest(_a, [\"text\", \"secondaryText\", \"graphic\", \"metaIcon\", \"meta\", \"children\"]);\n\n  var primaryTextToRender = text && secondaryText !== undefined ? React.createElement(ListItemPrimaryText, null, text) : text;\n  var secondaryTextToRender = secondaryText !== undefined ? React.createElement(ListItemSecondaryText, null, secondaryText) : null;\n  return React.createElement(ListItem, __assign({}, rest, {\n    ref: ref\n  }), graphic !== undefined && React.createElement(ListItemGraphic, {\n    icon: graphic\n  }), secondaryTextToRender !== null ? React.createElement(ListItemText, null, primaryTextToRender, secondaryTextToRender) : primaryTextToRender, (!!meta || !!metaIcon) && React.createElement(ListItemMeta, {\n    icon: metaIcon\n  }, meta), children);\n});","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/node_modules/@rmwc/list/next/list-item.js"],"names":["__assign","__rest","React","classNames","useClassNames","Tag","createComponent","withRipple","Icon","ListItem","surface","props","ref","selected","activated","disabled","rest","className","createElement","tag","tabIndex","ListItemText","ListItemPrimaryText","ListItemSecondaryText","ListItemGraphic","ListItemMeta","icon","isValidElement","children","cloneElement","ListGroup","ListGroupSubheader","ListDivider","role","SimpleListItem","_a","text","secondaryText","graphic","metaIcon","meta","primaryTextToRender","undefined","secondaryTextToRender"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { classNames, useClassNames, Tag, createComponent } from '@rmwc/base';\nimport { withRipple } from '@rmwc/ripple';\nimport { Icon } from '@rmwc/icon';\n/** A ListItem component. */\nexport var ListItem = withRipple({ surface: false })(createComponent(function ListItem(props, ref) {\n    var selected = props.selected, activated = props.activated, disabled = props.disabled, rest = __rest(props, [\"selected\", \"activated\", \"disabled\"]);\n    var className = useClassNames(props, [\n        'mdc-list-item',\n        {\n            'mdc-list-item--selected': props.selected,\n            'mdc-list-item--activated': props.activated,\n            'mdc-list-item--disabled': props.disabled\n        }\n    ]);\n    return (React.createElement(Tag, __assign({ tag: \"li\", tabIndex: 0 }, rest, { className: className, ref: ref })));\n}));\n/** Text Wrapper for the ListItem */\nexport var ListItemText = createComponent(function ListItemText(props, ref) {\n    var className = useClassNames(props, ['mdc-list-item__text']);\n    return React.createElement(Tag, __assign({ tag: \"span\" }, props, { ref: ref, className: className }));\n});\n/** Primary Text for the ListItem */\nexport var ListItemPrimaryText = createComponent(function ListItemPrimaryText(props, ref) {\n    var className = useClassNames(props, ['mdc-list-item__primary-text']);\n    return React.createElement(Tag, __assign({ tag: \"span\" }, props, { ref: ref, className: className }));\n});\n/** Secondary text for the ListItem */\nexport var ListItemSecondaryText = createComponent(function ListItemSecondaryText(props, ref) {\n    var className = useClassNames(props, ['mdc-list-item__secondary-text']);\n    return React.createElement(Tag, __assign({ tag: \"span\" }, props, { ref: ref, className: className }));\n});\n/** A graphic / icon for the ListItem */\nexport var ListItemGraphic = createComponent(function ListItemGraphic(props, ref) {\n    var className = useClassNames(props, ['mdc-list-item__graphic']);\n    return (React.createElement(Icon, __assign({}, props, { \"aria-hidden\": \"true\", ref: ref, className: className })));\n});\n/** Meta content for the ListItem. This can either by an icon by setting the `icon` prop, or any other kind of content. */\nexport var ListItemMeta = createComponent(function ListItemMeta(props, ref) {\n    var className = useClassNames(props, ['mdc-list-item__meta']);\n    if (!!props.icon) {\n        return (React.createElement(Icon, __assign({}, props, { \"aria-hidden\": \"true\", ref: ref, className: className })));\n    }\n    if (React.isValidElement(props.children)) {\n        var children = props.children, rest = __rest(props, [\"children\"]);\n        return React.cloneElement(props.children, __assign(__assign(__assign({}, rest), props.children.props), { className: classNames(className, props.children.props.className) }));\n    }\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** A container to group ListItems */\nexport var ListGroup = createComponent(function ListGroup(props, ref) {\n    var className = useClassNames(props, ['mdc-list-group']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** A subheader for the ListGroup */\nexport var ListGroupSubheader = createComponent(function ListGroupSubheader(props, ref) {\n    var className = useClassNames(props, ['mdc-list-group__subheader']);\n    return React.createElement(Tag, __assign({}, props, { ref: ref, className: className }));\n});\n/** A divider for the List */\nexport var ListDivider = createComponent(function ListDivider(props, ref) {\n    var className = useClassNames(props, ['mdc-list-divider']);\n    return (React.createElement(Tag, __assign({ tag: \"li\", role: \"separator\" }, props, { ref: ref, className: className })));\n});\n/** A simple list item template. */\nexport var SimpleListItem = createComponent(function (_a, ref) {\n    var text = _a.text, secondaryText = _a.secondaryText, graphic = _a.graphic, metaIcon = _a.metaIcon, meta = _a.meta, children = _a.children, rest = __rest(_a, [\"text\", \"secondaryText\", \"graphic\", \"metaIcon\", \"meta\", \"children\"]);\n    var primaryTextToRender = text && secondaryText !== undefined ? (React.createElement(ListItemPrimaryText, null, text)) : (text);\n    var secondaryTextToRender = secondaryText !== undefined ? (React.createElement(ListItemSecondaryText, null, secondaryText)) : null;\n    return (React.createElement(ListItem, __assign({}, rest, { ref: ref }),\n        graphic !== undefined && React.createElement(ListItemGraphic, { icon: graphic }),\n        secondaryTextToRender !== null ? (React.createElement(ListItemText, null,\n            primaryTextToRender,\n            secondaryTextToRender)) : (primaryTextToRender),\n        (!!meta || !!metaIcon) && (React.createElement(ListItemMeta, { icon: metaIcon }, meta)),\n        children));\n});\n"]},"metadata":{},"sourceType":"module"}