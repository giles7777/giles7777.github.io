{"ast":null,"code":"import { __assign, __read, __rest } from \"tslib\";\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem } from '@rmwc/list';\nimport { getDisplayName, classNames, useClassNames, createComponent } from '@rmwc/base';\nimport { MenuSurface, MenuSurfaceAnchor } from '../menu-surface';\nimport { useMenuFoundation } from './foundation';\n/** A wrapper for menu items */\n\nexport var MenuItems = createComponent(function MenuItems(props, ref) {\n  var className = useClassNames(props, ['mdc-list mdc-menu__items']);\n  return React.createElement(List, __assign({\n    role: \"menu\"\n  }, props, {\n    className: className,\n    ref: ref\n  }));\n});\nMenuItems.displayName = 'MenuItems';\n/** This is just the ListItem component exported from the Menu module for convenience. You can use `ListItem` or `SimpleListItem` components from the List section as long as you add `role=\"menuitem\"` and `tabIndex=\"0\"` to the components for accessibility. */\n\nexport var MenuItem = createComponent(function MenuItem(props, ref) {\n  return React.createElement(ListItem, __assign({\n    role: \"menuitem\",\n    tabIndex: 0\n  }, props, {\n    ref: ref\n  }));\n});\n\nvar isMenuItems = function isMenuItems(child) {\n  return getDisplayName(child) === 'MenuItems';\n};\n/** A menu component for displaying lists items. */\n\n\nexport var Menu = createComponent(function Menu(props, ref) {\n  var children = props.children,\n      focusOnOpen = props.focusOnOpen,\n      onSelect = props.onSelect,\n      foundationRef = props.foundationRef,\n      rest = __rest(props, [\"children\", \"focusOnOpen\", \"onSelect\", \"foundationRef\"]);\n\n  var _a = useMenuFoundation(props),\n      rootEl = _a.rootEl,\n      setListApi = _a.setListApi,\n      setMenuSurfaceApi = _a.setMenuSurfaceApi;\n\n  var needsMenuItemsWrapper = (React.Children.map(children, isMenuItems) || []).every(function (val) {\n    return val === false;\n  });\n  var menuItemsProps = {\n    apiRef: setListApi\n  };\n  return React.createElement(MenuSurface, __assign({}, rootEl.props(rest), {\n    \"aria-hidden\": !rest.open,\n    className: classNames('mdc-menu', rest.className),\n    apiRef: setMenuSurfaceApi,\n    ref: ref\n  }), needsMenuItemsWrapper ? React.createElement(MenuItems, __assign({}, menuItemsProps), children) : React.Children.map(children, function (child) {\n    if (isMenuItems(child)) {\n      return React.cloneElement(child, __assign(__assign({}, React.isValidElement(child) ? child.props : {}), menuItemsProps));\n    }\n\n    return child;\n  }));\n});\n\nvar simpleMenuFactory = function simpleMenuFactory(MenuComponent) {\n  return function (props) {\n    var _a = __read(useState(!!props.open), 2),\n        stateOpen = _a[0],\n        setStateOpen = _a[1];\n\n    useEffect(function () {\n      if (props.open !== undefined && props.open !== stateOpen) {\n        setStateOpen(!!props.open);\n      }\n    }, [props.open, stateOpen]);\n\n    var handle = props.handle,\n        onClose = props.onClose,\n        children = props.children,\n        _b = props.rootProps,\n        rootProps = _b === void 0 ? {} : _b,\n        open = props.open,\n        foundationRef = props.foundationRef,\n        rest = __rest(props, [\"handle\", \"onClose\", \"children\", \"rootProps\", \"open\", \"foundationRef\"]);\n\n    var wrappedHandle = React.cloneElement(handle, __assign(__assign({}, handle.props), {\n      onClick: function onClick(evt) {\n        setStateOpen(!stateOpen);\n\n        if (handle.props.onClick) {\n          handle.props.onClick(evt);\n        }\n      }\n    }));\n\n    var wrappedOnClose = function wrappedOnClose(evt) {\n      setStateOpen(!!open || false);\n      onClose === null || onClose === void 0 ? void 0 : onClose(evt);\n    };\n\n    var RenderMenuComponent = MenuComponent;\n    return React.createElement(MenuSurfaceAnchor, __assign({}, rootProps), React.createElement(RenderMenuComponent, __assign({}, rest, {\n      onClose: wrappedOnClose,\n      open: stateOpen\n    }), children), wrappedHandle);\n  };\n};\n/** A Simplified menu component that allows you to pass a handle element and will automatically control the open state and add a MenuSurfaceAnchor */\n\n\nexport var SimpleMenu = simpleMenuFactory(Menu);\n/** The same as SimpleMenu, but a generic surface. */\n\nexport var SimpleMenuSurface = simpleMenuFactory(MenuSurface);","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/node_modules/@rmwc/menu/next/menu/index.js"],"names":["__assign","__read","__rest","React","useEffect","useState","List","ListItem","getDisplayName","classNames","useClassNames","createComponent","MenuSurface","MenuSurfaceAnchor","useMenuFoundation","MenuItems","props","ref","className","createElement","role","displayName","MenuItem","tabIndex","isMenuItems","child","Menu","children","focusOnOpen","onSelect","foundationRef","rest","_a","rootEl","setListApi","setMenuSurfaceApi","needsMenuItemsWrapper","Children","map","every","val","menuItemsProps","apiRef","open","cloneElement","isValidElement","simpleMenuFactory","MenuComponent","stateOpen","setStateOpen","undefined","handle","onClose","_b","rootProps","wrappedHandle","onClick","evt","wrappedOnClose","RenderMenuComponent","SimpleMenu","SimpleMenuSurface"],"mappings":"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","sourcesContent":["import { __assign, __read, __rest } from \"tslib\";\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem } from '@rmwc/list';\nimport { getDisplayName, classNames, useClassNames, createComponent } from '@rmwc/base';\nimport { MenuSurface, MenuSurfaceAnchor } from '../menu-surface';\nimport { useMenuFoundation } from './foundation';\n/** A wrapper for menu items */\nexport var MenuItems = createComponent(function MenuItems(props, ref) {\n    var className = useClassNames(props, ['mdc-list mdc-menu__items']);\n    return React.createElement(List, __assign({ role: \"menu\" }, props, { className: className, ref: ref }));\n});\nMenuItems.displayName = 'MenuItems';\n/** This is just the ListItem component exported from the Menu module for convenience. You can use `ListItem` or `SimpleListItem` components from the List section as long as you add `role=\"menuitem\"` and `tabIndex=\"0\"` to the components for accessibility. */\nexport var MenuItem = createComponent(function MenuItem(props, ref) {\n    return React.createElement(ListItem, __assign({ role: \"menuitem\", tabIndex: 0 }, props, { ref: ref }));\n});\nvar isMenuItems = function (child) {\n    return getDisplayName(child) === 'MenuItems';\n};\n/** A menu component for displaying lists items. */\nexport var Menu = createComponent(function Menu(props, ref) {\n    var children = props.children, focusOnOpen = props.focusOnOpen, onSelect = props.onSelect, foundationRef = props.foundationRef, rest = __rest(props, [\"children\", \"focusOnOpen\", \"onSelect\", \"foundationRef\"]);\n    var _a = useMenuFoundation(props), rootEl = _a.rootEl, setListApi = _a.setListApi, setMenuSurfaceApi = _a.setMenuSurfaceApi;\n    var needsMenuItemsWrapper = (React.Children.map(children, isMenuItems) || []).every(function (val) { return val === false; });\n    var menuItemsProps = {\n        apiRef: setListApi\n    };\n    return (React.createElement(MenuSurface, __assign({}, rootEl.props(rest), { \"aria-hidden\": !rest.open, className: classNames('mdc-menu', rest.className), apiRef: setMenuSurfaceApi, ref: ref }), needsMenuItemsWrapper ? (React.createElement(MenuItems, __assign({}, menuItemsProps), children)) : (React.Children.map(children, function (child) {\n        if (isMenuItems(child)) {\n            return React.cloneElement(child, __assign(__assign({}, (React.isValidElement(child) ? child.props : {})), menuItemsProps));\n        }\n        return child;\n    }))));\n});\nvar simpleMenuFactory = function (MenuComponent) {\n    return function (props) {\n        var _a = __read(useState(!!props.open), 2), stateOpen = _a[0], setStateOpen = _a[1];\n        useEffect(function () {\n            if (props.open !== undefined && props.open !== stateOpen) {\n                setStateOpen(!!props.open);\n            }\n        }, [props.open, stateOpen]);\n        var handle = props.handle, onClose = props.onClose, children = props.children, _b = props.rootProps, rootProps = _b === void 0 ? {} : _b, open = props.open, foundationRef = props.foundationRef, rest = __rest(props, [\"handle\", \"onClose\", \"children\", \"rootProps\", \"open\", \"foundationRef\"]);\n        var wrappedHandle = React.cloneElement(handle, __assign(__assign({}, handle.props), { onClick: function (evt) {\n                setStateOpen(!stateOpen);\n                if (handle.props.onClick) {\n                    handle.props.onClick(evt);\n                }\n            } }));\n        var wrappedOnClose = function (evt) {\n            setStateOpen(!!open || false);\n            onClose === null || onClose === void 0 ? void 0 : onClose(evt);\n        };\n        var RenderMenuComponent = MenuComponent;\n        return (React.createElement(MenuSurfaceAnchor, __assign({}, rootProps),\n            React.createElement(RenderMenuComponent, __assign({}, rest, { onClose: wrappedOnClose, open: stateOpen }), children),\n            wrappedHandle));\n    };\n};\n/** A Simplified menu component that allows you to pass a handle element and will automatically control the open state and add a MenuSurfaceAnchor */\nexport var SimpleMenu = simpleMenuFactory(Menu);\n/** The same as SimpleMenu, but a generic surface. */\nexport var SimpleMenuSurface = simpleMenuFactory(MenuSurface);\n"]},"metadata":{},"sourceType":"module"}