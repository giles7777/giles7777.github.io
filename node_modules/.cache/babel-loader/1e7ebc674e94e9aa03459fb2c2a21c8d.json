{"ast":null,"code":"var _jsxFileName = \"C:\\\\cygwin64\\\\home\\\\giles\\\\projs\\\\personal\\\\getalife\\\\prototype\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { World } from \"./World\";\nimport { Agent } from \"./Agent\";\nimport { ConwayAgent } from \"./ConwayAgent\";\nimport { Queue } from \"./Queue\";\nconst style = {\n  height: 512 // we can control scene size by setting container dimensions\n\n};\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 30;\nconst transmissionDelayMax = 0; // ms max\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.messages = [];\n\n    this.worldSetup = () => {\n      this.world = new World();\n    };\n\n    this.agentSetup = () => {\n      let id = 0;\n      let params = {\n        cycleTime: 100\n      };\n      const agent0 = new ConwayAgent(THREE, id++, this.world, 0.1, 2, 0.5, 0, 0, 0, Math.PI / 2, params, false);\n      const agent1 = new ConwayAgent(THREE, id++, this.world, 0.1, 2, 1.5, 0, 0, 0, Math.PI / 2, params, true);\n      const agent2 = new ConwayAgent(THREE, id++, this.world, 0.1, 2, 3, 0, 0, 0, Math.PI / 2, params, true);\n      const agent3 = new ConwayAgent(THREE, id++, this.world, 0.4, -6, 0, 0, 0, 0, 0, params, true);\n      const agent4 = new ConwayAgent(THREE, id++, this.world, 0.4, -2, 0, -5, 0, 0, 0, params, true);\n      const agent5 = new ConwayAgent(THREE, id++, this.world, 0.4, 2, 0, -10, 0, 0, 0, params, true);\n      const agent6 = new ConwayAgent(THREE, id++, this.world, 0.1, -12, 0.5, -10, 0, 0, -Math.PI / 2, params, true);\n      const agent7 = new ConwayAgent(THREE, id++, this.world, 0.1, -12, 1.5, -10, 0, 0, -Math.PI / 2, params, true);\n      const agent8 = new ConwayAgent(THREE, id++, this.world, 0.1, -12, 3, -10, 0, 0, -Math.PI / 2, params, true);\n      const agent9 = new ConwayAgent(THREE, id++, this.world, 0.1, -13, 0.5, -15, 0, 0, -Math.PI / 2, true);\n      const agent10 = new ConwayAgent(THREE, id++, this.world, 0.1, -13, 1.5, -15, 0, 0, -Math.PI / 2, true);\n      const agent11 = new ConwayAgent(THREE, id++, this.world, 0.1, -13, 3, -15, 0, 0, -Math.PI / 2, true); //    this.agents = [agent0,agent1,agent2,agent3,agent4,agent5,agent6,agent7,agent8,agent9,agent10,agent11];\n\n      this.agents = [agent0, agent1];\n      let quadpole = [[1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1]];\n      let pattern = quadpole;\n      let size = pattern.length;\n      this.agents = [];\n\n      for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n          const agent = new ConwayAgent(THREE, this, id++, this.world, 0.1, x - size / 2, -y + size / 2, 0, Math.PI / 2, 0, 0, params, pattern[x][y] === 1);\n          this.agents.push(agent);\n        }\n      }\n    };\n\n    this.sceneSetup = () => {\n      // get container dimensions and use them for scene sizing\n      const width = this.el.clientWidth;\n      const height = this.el.clientHeight;\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n      );\n      this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n      // OrbitControls allow a camera to orbit around the object\n      // https://threejs.org/docs/#examples/controls/OrbitControls\n\n      this.controls = new OrbitControls(this.camera, this.el);\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(width, height);\n      this.el.appendChild(this.renderer.domElement); // mount using React ref\n    };\n\n    this.addCustomSceneObjects = () => {\n      for (let n = 0; n < this.agents.length; n++) {\n        this.scene.add(this.agents[n].getMesh());\n      }\n\n      this.calcAgentNeighbors(8);\n      const lights = [];\n      lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[0].position.set(0, 200, 0);\n      lights[1].position.set(100, 200, 100);\n      lights[2].position.set(-100, -200, -100); //this.scene.add(lights[0]);\n      //this.scene.add(lights[1]);\n      //this.scene.add(lights[2]);\n    };\n\n    this.startAnimationLoop = () => {\n      this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n      let time = new Date().getTime();\n      let remove = [];\n\n      for (let i = 0; i < this.messages.length; i++) {\n        if (this.messages[i].time < time) {\n          this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n          remove.push(i);\n        }\n      }\n\n      for (let i = 0; i < remove.length; i++) {\n        this.agents.splice(remove[i] - i, 1);\n      }\n\n      delta += clock.getDelta();\n\n      if (delta < interval) {\n        return;\n      }\n\n      this.renderer.render(this.scene, this.camera);\n      delta = delta % interval;\n    };\n\n    this.handleWindowResize = () => {\n      const width = this.el.clientWidth;\n      const height = this.el.clientHeight;\n      this.renderer.setSize(width, height);\n      this.camera.aspect = width / height; // Note that after making changes to most of camera properties you have to call\n      // .updateProjectionMatrix for the changes to take effect.\n\n      this.camera.updateProjectionMatrix();\n    };\n  }\n\n  componentDidMount() {\n    this.worldSetup();\n    this.agentSetup();\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  } // Setup the world environment.\n\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    console.log(\"Calculating neighbors\");\n\n    for (let agentIdx = 0; agentIdx < this.agents.length; agentIdx++) {\n      console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i !== agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(pos);\n          distances[i] = {\n            dist: dist,\n            agentIdx: i\n          };\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      }); //console.log(distances);\n\n      let neighbors = [];\n      let len = Math.min(max, distances.length);\n\n      for (let i = 0; i < len; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      console.log(JSON.stringify(neighbors));\n      this.agents[agentIdx].setNeighbors(neighbors);\n    }\n  }\n\n  sendMessage(from, to, msg) {\n    this.messages.push(new {\n      from: from,\n      to: to,\n      msg: msg,\n      time: new Date().getTime() + Math.random() * transmissionDelayMax\n    }());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      ref: ref => this.el = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/src/App.js"],"names":["React","Component","THREE","OrbitControls","World","Agent","ConwayAgent","Queue","style","height","delta","clock","Clock","interval","transmissionDelayMax","App","messages","worldSetup","world","agentSetup","id","params","cycleTime","agent0","Math","PI","agent1","agent2","agent3","agent4","agent5","agent6","agent7","agent8","agent9","agent10","agent11","agents","quadpole","pattern","size","length","x","y","agent","push","sceneSetup","width","el","clientWidth","clientHeight","scene","Scene","camera","PerspectiveCamera","position","z","controls","renderer","WebGLRenderer","setSize","appendChild","domElement","addCustomSceneObjects","n","add","getMesh","calcAgentNeighbors","lights","PointLight","set","startAnimationLoop","requestID","window","requestAnimationFrame","time","Date","getTime","remove","i","to","receiveMessage","splice","getDelta","render","handleWindowResize","aspect","updateProjectionMatrix","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","cancelAnimationFrame","dispose","max","console","log","agentIdx","distances","pos","getPosition","dist","distanceToSquared","sort","a","b","neighbors","len","min","JSON","stringify","setNeighbors","sendMessage","from","msg","random","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { World } from \"./World\"\nimport { Agent } from \"./Agent\"\nimport { ConwayAgent } from \"./ConwayAgent\"\nimport { Queue } from \"./Queue\";\n\n\nconst style = {\n  height: 512 // we can control scene size by setting container dimensions\n};\n\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 30;\n\nconst transmissionDelayMax = 0;  // ms max\n\nclass App extends Component {\n\n  messages = [];\n\n  componentDidMount() {\n    this.worldSetup();\n    this.agentSetup();\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  // Setup the world environment.\n  worldSetup = () => {\n    this.world = new World();\n  };\n\n  // Setup the agents\n  agentSetup = () => {\n    let id = 0;\n    let params = {\n      cycleTime: 100\n    };\n\n\n    const agent0 = new ConwayAgent(THREE,id++,this.world,0.1,2,0.5,0,0,0,Math.PI/2,params,false);\n    const agent1 = new ConwayAgent(THREE,id++,this.world,0.1,2,1.5,0,0,0,Math.PI/2,params,true);\n    const agent2 = new ConwayAgent(THREE,id++,this.world,0.1,2,3,0,0,0,Math.PI/2,params,true);\n    const agent3 = new ConwayAgent(THREE,id++,this.world,0.4,-6,0,0,0,0,0,params,true);\n    const agent4 = new ConwayAgent(THREE,id++,this.world,0.4,-2,0,-5,0,0,0,params,true);\n    const agent5 = new ConwayAgent(THREE,id++,this.world,0.4,2,0,-10,0,0,0,params,true);\n    const agent6 = new ConwayAgent(THREE,id++,this.world,0.1,-12,0.5,-10,0,0,-Math.PI/2,params,true);\n    const agent7 = new ConwayAgent(THREE,id++,this.world,0.1,-12,1.5,-10,0,0,-Math.PI/2,params,true);\n    const agent8 = new ConwayAgent(THREE,id++,this.world,0.1,-12,3,-10,0,0,-Math.PI/2,params,true);\n    const agent9 = new ConwayAgent(THREE,id++,this.world,0.1,-13,0.5,-15,0,0,-Math.PI/2,true);\n    const agent10 = new ConwayAgent(THREE,id++,this.world,0.1,-13,1.5,-15,0,0,-Math.PI/2,true);\n    const agent11 = new ConwayAgent(THREE,id++,this.world,0.1,-13,3,-15,0,0,-Math.PI/2,true);\n\n//    this.agents = [agent0,agent1,agent2,agent3,agent4,agent5,agent6,agent7,agent8,agent9,agent10,agent11];\n    this.agents = [agent0,agent1];\n\n    let quadpole = [\n      [1,1,0,0,0,0,0],\n      [1,0,0,0,0,0,0],\n      [0,1,0,1,0,0,0],\n      [0,0,0,0,0,0,0],\n      [0,0,0,1,0,1,0],\n      [0,0,0,0,0,0,1],\n      [0,0,0,0,0,1,1]\n    ];\n\n    let pattern = quadpole;\n\n    let size = pattern.length;\n\n    this.agents = [];\n    for(let x=0; x < size; x++) {\n      for(let y=0; y < size; y++) {\n        const agent = new ConwayAgent(THREE,this,id++,this.world,0.1,x-size/2,-y+size/2,0,Math.PI/2,0,0,params,pattern[x][y] === 1);\n        this.agents.push(agent);\n      }\n    }\n  };\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n    );\n    this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n    this.controls = new OrbitControls(this.camera, this.el);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    for(let n=0; n < this.agents.length; n++) {\n      this.scene.add(this.agents[n].getMesh());\n    }\n\n    this.calcAgentNeighbors(8);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    //this.scene.add(lights[0]);\n    //this.scene.add(lights[1]);\n    //this.scene.add(lights[2]);\n  };\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    console.log(\"Calculating neighbors\");\n\n    for(let agentIdx=0; agentIdx < this.agents.length; agentIdx++) {\n      console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i !== agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(pos);\n          distances[i] = {dist: dist, agentIdx: i};\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      });\n\n      //console.log(distances);\n      let neighbors = [];\n      let len = Math.min(max,distances.length);\n      for(let i=0; i < len; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      console.log(JSON.stringify(neighbors));\n      this.agents[agentIdx].setNeighbors(neighbors);\n    }\n  }\n\n  startAnimationLoop = () => {\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    let time = new Date().getTime();\n    let remove = [];\n    for(let i=0; i < this.messages.length; i++) {\n      if (this.messages[i].time < time) {\n        this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n        remove.push(i);\n      }\n    }\n\n    for(let i=0; i < remove.length; i++) {\n      this.agents.splice(remove[i]-i,1);\n    }\n\n    delta += clock.getDelta();\n    if (delta < interval) {\n      return;\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    delta = delta % interval;\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  sendMessage(from,to,msg) {\n    this.messages.push(new {from:from,to:to,msg:msg,time: new Date().getTime() + Math.random() * transmissionDelayMax});\n  }\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}