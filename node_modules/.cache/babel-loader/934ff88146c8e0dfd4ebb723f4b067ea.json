{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { useFoundation } from '@rmwc/base';\nimport { MDCSelectIconFoundation } from '@material/select';\nexport var useSelectIconFoundation = function useSelectIconFoundation(props) {\n  var _a = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true\n    },\n    api: function api(_a) {\n      var foundation = _a.foundation;\n      return {\n        getFoundation: function getFoundation() {\n          return foundation;\n        }\n      };\n    },\n    foundation: function foundation(_a) {\n      var rootEl = _a.rootEl,\n          emit = _a.emit;\n      return new MDCSelectIconFoundation({\n        getAttr: function getAttr(attr) {\n          return rootEl.getProp(attr);\n        },\n        setAttr: function setAttr(attr, value) {\n          return rootEl.setProp(attr, value);\n        },\n        removeAttr: function removeAttr(attr) {\n          return rootEl.removeProp(attr);\n        },\n        setContent: function setContent(content) {\n          rootEl.ref && (rootEl.ref.textContent = content);\n        },\n        registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n          return rootEl.addEventListener(evtType, handler);\n        },\n        deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n          return rootEl.removeEventListener(evtType, handler);\n        },\n        notifyIconAction: function notifyIconAction() {\n          return emit('onClick', {}, true);\n        }\n      });\n    }\n  }),\n      foundation = _a.foundation,\n      elements = __rest(_a, [\"foundation\"]);\n\n  return __assign({}, elements);\n};","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/node_modules/@rmwc/select/next/select-icon/foundation.js"],"names":["__assign","__rest","useFoundation","MDCSelectIconFoundation","useSelectIconFoundation","props","_a","elements","rootEl","api","foundation","getFoundation","emit","getAttr","attr","getProp","setAttr","value","setProp","removeAttr","removeProp","setContent","content","ref","textContent","registerInteractionHandler","evtType","handler","addEventListener","deregisterInteractionHandler","removeEventListener","notifyIconAction"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,OAAO,IAAIC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUC,KAAV,EAAiB;AAClD,MAAIC,EAAE,GAAGJ,aAAa,CAAC;AACnBG,IAAAA,KAAK,EAAEA,KADY;AAEnBE,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFS;AAGnBC,IAAAA,GAAG,EAAE,aAAUH,EAAV,EAAc;AACf,UAAII,UAAU,GAAGJ,EAAE,CAACI,UAApB;AACA,aAAO;AACHC,QAAAA,aAAa,EAAE,yBAAY;AAAE,iBAAOD,UAAP;AAAoB;AAD9C,OAAP;AAGH,KARkB;AASnBA,IAAAA,UAAU,EAAE,oBAAUJ,EAAV,EAAc;AACtB,UAAIE,MAAM,GAAGF,EAAE,CAACE,MAAhB;AAAA,UAAwBI,IAAI,GAAGN,EAAE,CAACM,IAAlC;AACA,aAAO,IAAIT,uBAAJ,CAA4B;AAC/BU,QAAAA,OAAO,EAAE,iBAAUC,IAAV,EAAgB;AAAE,iBAAON,MAAM,CAACO,OAAP,CAAeD,IAAf,CAAP;AAA8B,SAD1B;AAE/BE,QAAAA,OAAO,EAAE,iBAAUF,IAAV,EAAgBG,KAAhB,EAAuB;AAC5B,iBAAOT,MAAM,CAACU,OAAP,CAAeJ,IAAf,EAAqBG,KAArB,CAAP;AACH,SAJ8B;AAK/BE,QAAAA,UAAU,EAAE,oBAAUL,IAAV,EAAgB;AAAE,iBAAON,MAAM,CAACY,UAAP,CAAkBN,IAAlB,CAAP;AAAiC,SALhC;AAM/BO,QAAAA,UAAU,EAAE,oBAAUC,OAAV,EAAmB;AAC3Bd,UAAAA,MAAM,CAACe,GAAP,KAAef,MAAM,CAACe,GAAP,CAAWC,WAAX,GAAyBF,OAAxC;AACH,SAR8B;AAS/BG,QAAAA,0BAA0B,EAAE,oCAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAAE,iBAAOnB,MAAM,CAACoB,gBAAP,CAAwBF,OAAxB,EAAiCC,OAAjC,CAAP;AAAmD,SAT9E;AAU/BE,QAAAA,4BAA4B,EAAE,sCAAUH,OAAV,EAAmBC,OAAnB,EAA4B;AAAE,iBAAOnB,MAAM,CAACsB,mBAAP,CAA2BJ,OAA3B,EAAoCC,OAApC,CAAP;AAAsD,SAVnF;AAW/BI,QAAAA,gBAAgB,EAAE,4BAAY;AAAE,iBAAOnB,IAAI,CAAC,SAAD,EAAY,EAAZ,EAAgB,IAAhB,CAAX;AAAmC;AAXpC,OAA5B,CAAP;AAaH;AAxBkB,GAAD,CAAtB;AAAA,MAyBIF,UAAU,GAAGJ,EAAE,CAACI,UAzBpB;AAAA,MAyBgCH,QAAQ,GAAGN,MAAM,CAACK,EAAD,EAAK,CAAC,YAAD,CAAL,CAzBjD;;AA0BA,SAAON,QAAQ,CAAC,EAAD,EAAKO,QAAL,CAAf;AACH,CA5BM","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { useFoundation } from '@rmwc/base';\nimport { MDCSelectIconFoundation } from '@material/select';\nexport var useSelectIconFoundation = function (props) {\n    var _a = useFoundation({\n        props: props,\n        elements: { rootEl: true },\n        api: function (_a) {\n            var foundation = _a.foundation;\n            return {\n                getFoundation: function () { return foundation; }\n            };\n        },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, emit = _a.emit;\n            return new MDCSelectIconFoundation({\n                getAttr: function (attr) { return rootEl.getProp(attr); },\n                setAttr: function (attr, value) {\n                    return rootEl.setProp(attr, value);\n                },\n                removeAttr: function (attr) { return rootEl.removeProp(attr); },\n                setContent: function (content) {\n                    rootEl.ref && (rootEl.ref.textContent = content);\n                },\n                registerInteractionHandler: function (evtType, handler) { return rootEl.addEventListener(evtType, handler); },\n                deregisterInteractionHandler: function (evtType, handler) { return rootEl.removeEventListener(evtType, handler); },\n                notifyIconAction: function () { return emit('onClick', {}, true); }\n            });\n        }\n    }), foundation = _a.foundation, elements = __rest(_a, [\"foundation\"]);\n    return __assign({}, elements);\n};\n"]},"metadata":{},"sourceType":"module"}