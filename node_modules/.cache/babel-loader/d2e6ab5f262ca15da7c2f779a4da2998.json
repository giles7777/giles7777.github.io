{"ast":null,"code":"var _jsxFileName = \"C:\\\\cygwin64\\\\home\\\\giles\\\\projs\\\\personal\\\\getalife\\\\prototype\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Agent } from \"./Agent\";\nimport { Queue } from \"./Queue\";\nconst style = {\n  height: 512 // we can control scene size by setting container dimensions\n\n};\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 30;\nconst transmissionDelayMax = 50; // ms max\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.messages = [];\n\n    this.worldSetup = () => {\n      this.world = new World();\n    };\n\n    this.agentSetup = () => {\n      let id = 0;\n      const agent0 = new Agent(THREE, id++, this.world, 0.1, 2, 0.5, 0, 0, 0, Math.PI / 2);\n      const agent1 = new Agent(THREE, id++, this.world, 0.1, 2, 1.5, 0, 0, 0, Math.PI / 2);\n      const agent2 = new Agent(THREE, id++, this.world, 0.1, 2, 3, 0, 0, 0, Math.PI / 2);\n      const agent3 = new Agent(THREE, id++, this.world, 0.4, -6, 0, 0);\n      const agent4 = new Agent(THREE, id++, this.world, 0.4, -2, 0, -5);\n      const agent5 = new Agent(THREE, id++, this.world, 0.4, 2, 0, -10);\n      const agent6 = new Agent(THREE, id++, this.world, 0.1, -12, 0.5, -10, 0, 0, -Math.PI / 2);\n      const agent7 = new Agent(THREE, id++, this.world, 0.1, -12, 1.5, -10, 0, 0, -Math.PI / 2);\n      const agent8 = new Agent(THREE, id++, this.world, 0.1, -12, 3, -10, 0, 0, -Math.PI / 2);\n      const agent9 = new Agent(THREE, id++, this.world, 0.1, -13, 0.5, -15, 0, 0, -Math.PI / 2);\n      const agent10 = new Agent(THREE, id++, this.world, 0.1, -13, 1.5, -15, 0, 0, -Math.PI / 2);\n      const agent11 = new Agent(THREE, id++, this.world, 0.1, -13, 3, -15, 0, 0, -Math.PI / 2);\n      this.agents = [agent0, agent1, agent2, agent3, agent4, agent5, agent6, agent7, agent8, agent9, agent10, agent11];\n    };\n\n    this.sceneSetup = () => {\n      // get container dimensions and use them for scene sizing\n      const width = this.el.clientWidth;\n      const height = this.el.clientHeight;\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n      );\n      this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n      // OrbitControls allow a camera to orbit around the object\n      // https://threejs.org/docs/#examples/controls/OrbitControls\n\n      this.controls = new OrbitControls(this.camera, this.el);\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(width, height);\n      this.el.appendChild(this.renderer.domElement); // mount using React ref\n    };\n\n    this.addCustomSceneObjects = () => {\n      for (let n = 0; n < this.agents.length; n++) {\n        this.scene.add(this.agents[n].getMesh());\n      }\n\n      this.calcAgentNeighbors(8);\n      const lights = [];\n      lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[0].position.set(0, 200, 0);\n      lights[1].position.set(100, 200, 100);\n      lights[2].position.set(-100, -200, -100); //this.scene.add(lights[0]);\n      //this.scene.add(lights[1]);\n      //this.scene.add(lights[2]);\n    };\n\n    this.startAnimationLoop = () => {\n      this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n      let time = new Date().getTime();\n      let remove = [];\n\n      for (let i = 0; i < this.messages.length; i++) {\n        if (this.messages[i].time < time) {\n          this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n          remove.push(i);\n        }\n      }\n\n      for (let i = 0; i < remove.length; i++) {\n        this.agents.splice(remove[i] - i, 1);\n      }\n\n      delta += clock.getDelta();\n\n      if (delta < interval) {\n        return;\n      }\n\n      this.renderer.render(this.scene, this.camera);\n      delta = delta % interval;\n    };\n\n    this.handleWindowResize = () => {\n      const width = this.el.clientWidth;\n      const height = this.el.clientHeight;\n      this.renderer.setSize(width, height);\n      this.camera.aspect = width / height; // Note that after making changes to most of camera properties you have to call\n      // .updateProjectionMatrix for the changes to take effect.\n\n      this.camera.updateProjectionMatrix();\n    };\n  }\n\n  componentDidMount() {\n    this.worldSetup();\n    this.agentSetup();\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  } // Setup the world environment.\n\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    console.log(\"Calculating neighbors\");\n\n    for (let agentIdx = 0; agentIdx < this.agents.length; agentIdx++) {\n      console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i != agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(agent);\n          distances[i] = {\n            dist: dist,\n            agentIdx: i\n          };\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      }); //console.log(distances);\n\n      let neighbors = [];\n\n      for (let i = 0; i < max; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      console.log(JSON.stringify(neighbors));\n    }\n  }\n\n  sendMessage(from, to, msg) {\n    this.messages.push(new {\n      from: from,\n      to: to,\n      msg: msg,\n      time: new Date().getTime() + Math.random() * transmissionDelayMax\n    }());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      ref: ref => this.el = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/src/App.js"],"names":["React","Component","THREE","OrbitControls","Agent","Queue","style","height","delta","clock","Clock","interval","transmissionDelayMax","App","messages","worldSetup","world","World","agentSetup","id","agent0","Math","PI","agent1","agent2","agent3","agent4","agent5","agent6","agent7","agent8","agent9","agent10","agent11","agents","sceneSetup","width","el","clientWidth","clientHeight","scene","Scene","camera","PerspectiveCamera","position","z","controls","renderer","WebGLRenderer","setSize","appendChild","domElement","addCustomSceneObjects","n","length","add","getMesh","calcAgentNeighbors","lights","PointLight","set","startAnimationLoop","requestID","window","requestAnimationFrame","time","Date","getTime","remove","i","to","receiveMessage","push","splice","getDelta","render","handleWindowResize","aspect","updateProjectionMatrix","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","cancelAnimationFrame","dispose","max","console","log","agentIdx","distances","agent","pos","getPosition","dist","distanceToSquared","sort","a","b","neighbors","JSON","stringify","sendMessage","from","msg","random","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Agent } from \"./Agent\"\nimport { Queue } from \"./Queue\";\n\n\nconst style = {\n  height: 512 // we can control scene size by setting container dimensions\n};\n\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 30;\n\nconst transmissionDelayMax = 50;  // ms max\n\nclass App extends Component {\n\n  messages = [];\n\n  componentDidMount() {\n    this.worldSetup();\n    this.agentSetup();\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  // Setup the world environment.\n  worldSetup = () => {\n    this.world = new World();\n  };\n\n  // Setup the agents\n  agentSetup = () => {\n    let id = 0;\n    const agent0 = new Agent(THREE,id++,this.world,0.1,2,0.5,0,0,0,Math.PI/2);\n    const agent1 = new Agent(THREE,id++,this.world,0.1,2,1.5,0,0,0,Math.PI/2);\n    const agent2 = new Agent(THREE,id++,this.world,0.1,2,3,0,0,0,Math.PI/2);\n    const agent3 = new Agent(THREE,id++,this.world,0.4,-6,0,0);\n    const agent4 = new Agent(THREE,id++,this.world,0.4,-2,0,-5);\n    const agent5 = new Agent(THREE,id++,this.world,0.4,2,0,-10);\n    const agent6 = new Agent(THREE,id++,this.world,0.1,-12,0.5,-10,0,0,-Math.PI/2);\n    const agent7 = new Agent(THREE,id++,this.world,0.1,-12,1.5,-10,0,0,-Math.PI/2);\n    const agent8 = new Agent(THREE,id++,this.world,0.1,-12,3,-10,0,0,-Math.PI/2);\n    const agent9 = new Agent(THREE,id++,this.world,0.1,-13,0.5,-15,0,0,-Math.PI/2);\n    const agent10 = new Agent(THREE,id++,this.world,0.1,-13,1.5,-15,0,0,-Math.PI/2);\n    const agent11 = new Agent(THREE,id++,this.world,0.1,-13,3,-15,0,0,-Math.PI/2);\n\n    this.agents = [agent0,agent1,agent2,agent3,agent4,agent5,agent6,agent7,agent8,agent9,agent10,agent11];\n  };\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n    );\n    this.camera.position.z = 5; // is used here to set some distance from a cube that is located at z = 0\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n\n    this.controls = new OrbitControls(this.camera, this.el);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    for(let n=0; n < this.agents.length; n++) {\n      this.scene.add(this.agents[n].getMesh());\n    }\n\n    this.calcAgentNeighbors(8);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    //this.scene.add(lights[0]);\n    //this.scene.add(lights[1]);\n    //this.scene.add(lights[2]);\n  };\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    console.log(\"Calculating neighbors\");\n\n    for(let agentIdx=0; agentIdx < this.agents.length; agentIdx++) {\n      console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i != agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(agent);\n          distances[i] = {dist: dist, agentIdx: i};\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      });\n\n     //console.log(distances);\n      let neighbors = [];\n      for(let i=0; i < max; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      console.log(JSON.stringify(neighbors));\n    }\n  }\n\n  startAnimationLoop = () => {\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    let time = new Date().getTime();\n    let remove = [];\n    for(let i=0; i < this.messages.length; i++) {\n      if (this.messages[i].time < time) {\n        this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n        remove.push(i);\n      }\n    }\n\n    for(let i=0; i < remove.length; i++) {\n      this.agents.splice(remove[i]-i,1);\n    }\n\n    delta += clock.getDelta();\n    if (delta < interval) {\n      return;\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    delta = delta % interval;\n  };\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  sendMessage(from,to,msg) {\n    this.messages.push(new {from:from,to:to,msg:msg,time: new Date().getTime() + Math.random() * transmissionDelayMax});\n  }\n\n  render() {\n    return <div style={style} ref={ref => (this.el = ref)} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}