{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCSelectIconFoundation } from './foundation';\n\nvar MDCSelectIcon =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSelectIcon, _super);\n\n  function MDCSelectIcon() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSelectIcon.attachTo = function (root) {\n    return new MDCSelectIcon(root);\n  };\n\n  Object.defineProperty(MDCSelectIcon.prototype, \"foundation\", {\n    get: function get() {\n      return this.foundation_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCSelectIcon.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      getAttr: function getAttr(attr) {\n        return _this.root_.getAttribute(attr);\n      },\n      setAttr: function setAttr(attr, value) {\n        return _this.root_.setAttribute(attr, value);\n      },\n      removeAttr: function removeAttr(attr) {\n        return _this.root_.removeAttribute(attr);\n      },\n      setContent: function setContent(content) {\n        _this.root_.textContent = content;\n      },\n      registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n        return _this.listen(evtType, handler);\n      },\n      deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n        return _this.unlisten(evtType, handler);\n      },\n      notifyIconAction: function notifyIconAction() {\n        return _this.emit(MDCSelectIconFoundation.strings.ICON_EVENT, {}\n        /* evtData */\n        , true\n        /* shouldBubble */\n        );\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCSelectIconFoundation(adapter);\n  };\n\n  return MDCSelectIcon;\n}(MDCComponent);\n\nexport { MDCSelectIcon };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAQ,YAAR,QAA2B,0BAA3B;AAEA,SAAQ,uBAAR,QAAsC,cAAtC;;AAIA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;;AAAnC,WAAA,aAAA,GAAA;;AA4BC;;AA3BQ,EAAA,aAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAA6B;AAC3B,WAAO,IAAI,aAAJ,CAAkB,IAAlB,CAAP;AACD,GAFM;;AAIP,EAAA,MAAA,CAAA,cAAA,CAAI,aAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAAd,eAAA;AACE,aAAO,KAAK,WAAZ;AACD,KAFa;oBAAA;;AAAA,GAAd;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA,CAAA,CACE;AACA;AACA;;;AACA,QAAM,OAAO,GAAyB;AACpC,MAAA,OAAO,EAAE,iBAAC,IAAD,EAAK;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,YAAX,CAAA,IAAA,CAAA;AAA6B,OADZ;AAEpC,MAAA,OAAO,EAAE,iBAAC,IAAD,EAAO,KAAP,EAAY;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,IAAxB,EAAA,KAAA,CAAA;AAAoC,OAF1B;AAGpC,MAAA,UAAU,EAAE,oBAAC,IAAD,EAAK;AAAK,eAAA,KAAI,CAAC,KAAL,CAAW,eAAX,CAAA,IAAA,CAAA;AAAgC,OAHlB;AAIpC,MAAA,UAAU,EAAE,oBAAC,OAAD,EAAQ;AAClB,QAAA,KAAI,CAAC,KAAL,CAAW,WAAX,GAAyB,OAAzB;AACD,OANmC;AAOpC,MAAA,0BAA0B,EAAE,oCAAC,OAAD,EAAU,OAAV,EAAiB;AAAK,eAAA,KAAI,CAAC,MAAL,CAAY,OAAZ,EAAA,OAAA,CAAA;AAA6B,OAP3C;AAQpC,MAAA,4BAA4B,EAAE,sCAAC,OAAD,EAAU,OAAV,EAAiB;AAAK,eAAA,KAAI,CAAC,QAAL,CAAc,OAAd,EAAA,OAAA,CAAA;AAA+B,OAR/C;AASpC,MAAA,gBAAgB,EAAE,4BAAA;AAAM,eAAA,KAAI,CAAC,IAAL,CACpB,uBAAuB,CAAC,OAAxB,CAAgC,UADZ,EACwB;AAAG;AAD3B,UAC0C;AAD1C;AAAA,SAAA;AACkE;AAVtD,KAAtC,CAJF,CAgBE;;AACA,WAAO,IAAI,uBAAJ,CAA4B,OAA5B,CAAP;AACD,GAlBD;;AAmBF,SAAA,aAAA;AAAC,CA5BD,CAAmC,YAAnC,CAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCSelectIconFoundation } from './foundation';\nvar MDCSelectIcon = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSelectIcon, _super);\n    function MDCSelectIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSelectIcon.attachTo = function (root) {\n        return new MDCSelectIcon(root);\n    };\n    Object.defineProperty(MDCSelectIcon.prototype, \"foundation\", {\n        get: function () {\n            return this.foundation_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCSelectIcon.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            getAttr: function (attr) { return _this.root_.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root_.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root_.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root_.textContent = content;\n            },\n            registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            notifyIconAction: function () { return _this.emit(MDCSelectIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCSelectIconFoundation(adapter);\n    };\n    return MDCSelectIcon;\n}(MDCComponent));\nexport { MDCSelectIcon };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}