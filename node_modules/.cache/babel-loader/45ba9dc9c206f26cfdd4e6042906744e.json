{"ast":null,"code":"import { __assign, __read, __rest } from \"tslib\";\nimport { useState, useRef, useEffect } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCTextFieldFoundation } from '@material/textfield';\nexport var useTextFieldFoundation = function useTextFieldFoundation(props) {\n  var _a = __read(useState(false), 2),\n      lineRippleActive = _a[0],\n      setLineRippleActive = _a[1];\n\n  var _b = __read(useState(0), 2),\n      lineRippleCenter = _b[0],\n      setLineRippleCenter = _b[1];\n\n  var _c = __read(useState(), 2),\n      notchWidth = _c[0],\n      setNotchWidth = _c[1];\n\n  var _d = __read(useState(false), 2),\n      shakeLabel = _d[0],\n      setShakeLabel = _d[1];\n\n  var _e = __read(useState(false), 2),\n      floatLabel = _e[0],\n      setFloatlabel = _e[1];\n\n  var characterCounter = useRef();\n\n  var setCharacterCounter = function setCharacterCounter(api) {\n    return characterCounter.current = api;\n  };\n\n  var leadingIcon = useRef();\n\n  var setLeadingIcon = function setLeadingIcon(api) {\n    return leadingIcon.current = api;\n  };\n\n  var trailingIcon = useRef();\n\n  var setTrailingIcon = function setTrailingIcon(api) {\n    return trailingIcon.current = api;\n  };\n\n  var floatingLabel = useRef();\n\n  var setFloatingLabel = function setFloatingLabel(api) {\n    return floatingLabel.current = api;\n  };\n\n  var _f = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true,\n      inputEl: true\n    },\n    foundation: function foundation(_a) {\n      var rootEl = _a.rootEl,\n          inputEl = _a.inputEl,\n          getProps = _a.getProps;\n\n      var getLabelAdapterMethods = function getLabelAdapterMethods() {\n        return {\n          shakeLabel: function shakeLabel(shouldShake) {\n            return setShakeLabel(shouldShake);\n          },\n          floatLabel: function floatLabel(shouldFloat) {\n            var _a;\n\n            setFloatlabel((_a = getProps().floatLabel) !== null && _a !== void 0 ? _a : shouldFloat);\n          },\n          hasLabel: function hasLabel() {\n            return !!getProps().label;\n          },\n          getLabelWidth: function getLabelWidth() {\n            var _a;\n\n            return ((_a = floatingLabel.current) === null || _a === void 0 ? void 0 : _a.getWidth()) || 0;\n          }\n        };\n      };\n\n      var getLineRippleAdapterMethods = function getLineRippleAdapterMethods() {\n        return {\n          activateLineRipple: function activateLineRipple() {\n            setLineRippleActive(true);\n          },\n          deactivateLineRipple: function deactivateLineRipple() {\n            setLineRippleActive(false);\n          },\n          setLineRippleTransformOrigin: function setLineRippleTransformOrigin(normalizedX) {\n            setLineRippleCenter(normalizedX);\n          }\n        };\n      };\n\n      var getOutlineAdapterMethods = function getOutlineAdapterMethods() {\n        return {\n          notchOutline: function notchOutline(labelWidth) {\n            setNotchWidth(labelWidth);\n          },\n          closeOutline: function closeOutline() {\n            var _a;\n\n            (_a = getProps().floatLabel) !== null && _a !== void 0 ? _a : setNotchWidth(undefined);\n          },\n          hasOutline: function hasOutline() {\n            return !!getProps().outlined;\n          }\n        };\n      };\n\n      var getInputAdapterMethods = function getInputAdapterMethods() {\n        return {\n          registerInputInteractionHandler: function registerInputInteractionHandler(evtType, handler) {\n            return inputEl.addEventListener(evtType, handler);\n          },\n          deregisterInputInteractionHandler: function deregisterInputInteractionHandler(evtType, handler) {\n            return inputEl.removeEventListener(evtType, handler);\n          },\n          getNativeInput: function getNativeInput() {\n            return inputEl.ref;\n          }\n        };\n      };\n\n      var getFoundationMap = function getFoundationMap() {\n        return {\n          characterCounter: characterCounter.current ? characterCounter.current.getFoundation() : undefined,\n          helperText: undefined,\n          leadingIcon: leadingIcon.current ? leadingIcon.current.getFoundation() : undefined,\n          trailingIcon: trailingIcon.current ? trailingIcon.current.getFoundation() : undefined\n        };\n      };\n\n      return new MDCTextFieldFoundation(__assign(__assign(__assign(__assign({\n        addClass: function addClass(className) {\n          return rootEl.addClass(className);\n        },\n        removeClass: function removeClass(className) {\n          return rootEl.removeClass(className);\n        },\n        hasClass: function hasClass(className) {\n          return rootEl.hasClass(className);\n        },\n        registerTextFieldInteractionHandler: function registerTextFieldInteractionHandler(evtType, handler) {\n          return rootEl.addEventListener(evtType, handler);\n        },\n        deregisterTextFieldInteractionHandler: function deregisterTextFieldInteractionHandler(evtType, handler) {\n          return rootEl.removeEventListener(evtType, handler);\n        },\n        registerValidationAttributeChangeHandler: function registerValidationAttributeChangeHandler(handler) {\n          var getAttributesList = function getAttributesList(mutationsList) {\n            return mutationsList.map(function (mutation) {\n              return mutation.attributeName;\n            });\n          };\n\n          if (inputEl.ref) {\n            var observer = new MutationObserver(function (mutationsList) {\n              return handler(getAttributesList(mutationsList));\n            });\n            var targetNode = inputEl.ref;\n            var config = {\n              attributes: true\n            };\n            targetNode && observer.observe(targetNode, config);\n            return observer;\n          }\n\n          return {};\n        },\n        deregisterValidationAttributeChangeHandler: function deregisterValidationAttributeChangeHandler(observer) {\n          observer && observer.disconnect();\n        },\n        isFocused: function isFocused() {\n          return document.activeElement === inputEl.ref;\n        }\n      }, getInputAdapterMethods()), getLabelAdapterMethods()), getLineRippleAdapterMethods()), getOutlineAdapterMethods()), getFoundationMap());\n    }\n  }),\n      foundation = _f.foundation,\n      elements = __rest(_f, [\"foundation\"]); // Fixes bug #362\n  // MDC breaks Reacts unidirectional data flow...\n  // We have to capture the value before render\n  // and then compare it to props.value after render in order to set\n  // the appropriate foundation value without breaking its initial state\n\n\n  var foundationValue = foundation.getValue();\n  useEffect(function () {\n    if (props.value !== undefined && props.value !== foundationValue) {\n      foundation.setValue(String(props.value));\n    }\n  }, [props.value, foundation, foundationValue]); // Allow the user to float the label themselves\n\n  useEffect(function () {\n    if (props.floatLabel !== undefined) {\n      foundation.notchOutline(props.floatLabel); // @ts-ignore unsafe adapter access\n\n      foundation.adapter_.floatLabel(props.floatLabel);\n    }\n  }, [foundation, props.floatLabel]);\n  return __assign({\n    shakeLabel: shakeLabel,\n    floatLabel: floatLabel,\n    notchWidth: notchWidth,\n    lineRippleActive: lineRippleActive,\n    lineRippleCenter: lineRippleCenter,\n    setCharacterCounter: setCharacterCounter,\n    setLeadingIcon: setLeadingIcon,\n    setTrailingIcon: setTrailingIcon,\n    setFloatingLabel: setFloatingLabel\n  }, elements);\n};","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/website/giles7777.github.io/node_modules/@rmwc/textfield/next/textfield-foundation.js"],"names":["__assign","__read","__rest","useState","useRef","useEffect","useFoundation","MDCTextFieldFoundation","useTextFieldFoundation","props","_a","lineRippleActive","setLineRippleActive","_b","lineRippleCenter","setLineRippleCenter","_c","notchWidth","setNotchWidth","_d","shakeLabel","setShakeLabel","_e","floatLabel","setFloatlabel","characterCounter","setCharacterCounter","api","current","leadingIcon","setLeadingIcon","trailingIcon","setTrailingIcon","floatingLabel","setFloatingLabel","_f","elements","rootEl","inputEl","foundation","getProps","getLabelAdapterMethods","shouldShake","shouldFloat","hasLabel","label","getLabelWidth","getWidth","getLineRippleAdapterMethods","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","normalizedX","getOutlineAdapterMethods","notchOutline","labelWidth","closeOutline","undefined","hasOutline","outlined","getInputAdapterMethods","registerInputInteractionHandler","evtType","handler","addEventListener","deregisterInputInteractionHandler","removeEventListener","getNativeInput","ref","getFoundationMap","getFoundation","helperText","addClass","className","removeClass","hasClass","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerValidationAttributeChangeHandler","getAttributesList","mutationsList","map","mutation","attributeName","observer","MutationObserver","targetNode","config","attributes","observe","deregisterValidationAttributeChangeHandler","disconnect","isFocused","document","activeElement","foundationValue","getValue","value","setValue","String","adapter_"],"mappings":"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","sourcesContent":["import { __assign, __read, __rest } from \"tslib\";\nimport { useState, useRef, useEffect } from 'react';\nimport { useFoundation } from '@rmwc/base';\nimport { MDCTextFieldFoundation } from '@material/textfield';\nexport var useTextFieldFoundation = function (props) {\n    var _a = __read(useState(false), 2), lineRippleActive = _a[0], setLineRippleActive = _a[1];\n    var _b = __read(useState(0), 2), lineRippleCenter = _b[0], setLineRippleCenter = _b[1];\n    var _c = __read(useState(), 2), notchWidth = _c[0], setNotchWidth = _c[1];\n    var _d = __read(useState(false), 2), shakeLabel = _d[0], setShakeLabel = _d[1];\n    var _e = __read(useState(false), 2), floatLabel = _e[0], setFloatlabel = _e[1];\n    var characterCounter = useRef();\n    var setCharacterCounter = function (api) {\n        return (characterCounter.current = api);\n    };\n    var leadingIcon = useRef();\n    var setLeadingIcon = function (api) { return (leadingIcon.current = api); };\n    var trailingIcon = useRef();\n    var setTrailingIcon = function (api) {\n        return (trailingIcon.current = api);\n    };\n    var floatingLabel = useRef();\n    var setFloatingLabel = function (api) {\n        return (floatingLabel.current = api);\n    };\n    var _f = useFoundation({\n        props: props,\n        elements: { rootEl: true, inputEl: true },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, inputEl = _a.inputEl, getProps = _a.getProps;\n            var getLabelAdapterMethods = function () {\n                return {\n                    shakeLabel: function (shouldShake) { return setShakeLabel(shouldShake); },\n                    floatLabel: function (shouldFloat) {\n                        var _a;\n                        setFloatlabel((_a = getProps().floatLabel) !== null && _a !== void 0 ? _a : shouldFloat);\n                    },\n                    hasLabel: function () {\n                        return !!getProps().label;\n                    },\n                    getLabelWidth: function () { var _a; return ((_a = floatingLabel.current) === null || _a === void 0 ? void 0 : _a.getWidth()) || 0; }\n                };\n            };\n            var getLineRippleAdapterMethods = function () {\n                return {\n                    activateLineRipple: function () {\n                        setLineRippleActive(true);\n                    },\n                    deactivateLineRipple: function () {\n                        setLineRippleActive(false);\n                    },\n                    setLineRippleTransformOrigin: function (normalizedX) {\n                        setLineRippleCenter(normalizedX);\n                    }\n                };\n            };\n            var getOutlineAdapterMethods = function () {\n                return {\n                    notchOutline: function (labelWidth) {\n                        setNotchWidth(labelWidth);\n                    },\n                    closeOutline: function () {\n                        var _a;\n                        (_a = getProps().floatLabel) !== null && _a !== void 0 ? _a : setNotchWidth(undefined);\n                    },\n                    hasOutline: function () {\n                        return !!getProps().outlined;\n                    }\n                };\n            };\n            var getInputAdapterMethods = function () {\n                return {\n                    registerInputInteractionHandler: function (evtType, handler) { return inputEl.addEventListener(evtType, handler); },\n                    deregisterInputInteractionHandler: function (evtType, handler) { return inputEl.removeEventListener(evtType, handler); },\n                    getNativeInput: function () { return inputEl.ref; }\n                };\n            };\n            var getFoundationMap = function () {\n                return {\n                    characterCounter: characterCounter.current\n                        ? characterCounter.current.getFoundation()\n                        : undefined,\n                    helperText: undefined,\n                    leadingIcon: leadingIcon.current\n                        ? leadingIcon.current.getFoundation()\n                        : undefined,\n                    trailingIcon: trailingIcon.current\n                        ? trailingIcon.current.getFoundation()\n                        : undefined\n                };\n            };\n            return new MDCTextFieldFoundation(__assign(__assign(__assign(__assign({ addClass: function (className) { return rootEl.addClass(className); }, removeClass: function (className) { return rootEl.removeClass(className); }, hasClass: function (className) { return rootEl.hasClass(className); }, registerTextFieldInteractionHandler: function (evtType, handler) { return rootEl.addEventListener(evtType, handler); }, deregisterTextFieldInteractionHandler: function (evtType, handler) { return rootEl.removeEventListener(evtType, handler); }, registerValidationAttributeChangeHandler: function (handler) {\n                    var getAttributesList = function (mutationsList) {\n                        return mutationsList.map(function (mutation) { return mutation.attributeName; });\n                    };\n                    if (inputEl.ref) {\n                        var observer = new MutationObserver(function (mutationsList) {\n                            return handler(getAttributesList(mutationsList));\n                        });\n                        var targetNode = inputEl.ref;\n                        var config = { attributes: true };\n                        targetNode && observer.observe(targetNode, config);\n                        return observer;\n                    }\n                    return {};\n                }, deregisterValidationAttributeChangeHandler: function (observer) {\n                    observer && observer.disconnect();\n                }, isFocused: function () {\n                    return document.activeElement === inputEl.ref;\n                } }, getInputAdapterMethods()), getLabelAdapterMethods()), getLineRippleAdapterMethods()), getOutlineAdapterMethods()), getFoundationMap());\n        }\n    }), foundation = _f.foundation, elements = __rest(_f, [\"foundation\"]);\n    // Fixes bug #362\n    // MDC breaks Reacts unidirectional data flow...\n    // We have to capture the value before render\n    // and then compare it to props.value after render in order to set\n    // the appropriate foundation value without breaking its initial state\n    var foundationValue = foundation.getValue();\n    useEffect(function () {\n        if (props.value !== undefined && props.value !== foundationValue) {\n            foundation.setValue(String(props.value));\n        }\n    }, [props.value, foundation, foundationValue]);\n    // Allow the user to float the label themselves\n    useEffect(function () {\n        if (props.floatLabel !== undefined) {\n            foundation.notchOutline(props.floatLabel);\n            // @ts-ignore unsafe adapter access\n            foundation.adapter_.floatLabel(props.floatLabel);\n        }\n    }, [foundation, props.floatLabel]);\n    return __assign({ shakeLabel: shakeLabel,\n        floatLabel: floatLabel,\n        notchWidth: notchWidth,\n        lineRippleActive: lineRippleActive,\n        lineRippleCenter: lineRippleCenter,\n        setCharacterCounter: setCharacterCounter,\n        setLeadingIcon: setLeadingIcon,\n        setTrailingIcon: setTrailingIcon,\n        setFloatingLabel: setFloatingLabel }, elements);\n};\n"]},"metadata":{},"sourceType":"module"}