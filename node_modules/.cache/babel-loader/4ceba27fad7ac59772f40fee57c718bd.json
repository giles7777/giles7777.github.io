{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\n\nvar MDCSelect =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCSelect, _super);\n\n  function MDCSelect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSelect.attachTo = function (root) {\n    return new MDCSelect(root);\n  };\n\n  MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n    if (labelFactory === void 0) {\n      labelFactory = function (el) {\n        return new MDCFloatingLabel(el);\n      };\n    }\n\n    if (lineRippleFactory === void 0) {\n      lineRippleFactory = function (el) {\n        return new MDCLineRipple(el);\n      };\n    }\n\n    if (outlineFactory === void 0) {\n      outlineFactory = function (el) {\n        return new MDCNotchedOutline(el);\n      };\n    }\n\n    if (menuFactory === void 0) {\n      menuFactory = function (el) {\n        return new MDCMenu(el);\n      };\n    }\n\n    if (iconFactory === void 0) {\n      iconFactory = function (el) {\n        return new MDCSelectIcon(el);\n      };\n    }\n\n    if (helperTextFactory === void 0) {\n      helperTextFactory = function (el) {\n        return new MDCSelectHelperText(el);\n      };\n    }\n\n    this.selectAnchor_ = this.root_.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n    this.selectedText_ = this.root_.querySelector(strings.SELECTED_TEXT_SELECTOR);\n\n    if (!this.selectedText_) {\n      throw new Error('MDCSelect: Missing required element: The following selector must be present: ' + (\"'\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n    }\n\n    if (this.selectedText_.hasAttribute(strings.ARIA_CONTROLS)) {\n      var helperTextElement = document.getElementById(this.selectedText_.getAttribute(strings.ARIA_CONTROLS));\n\n      if (helperTextElement) {\n        this.helperText_ = helperTextFactory(helperTextElement);\n      }\n    }\n\n    this.menuSetup_(menuFactory);\n    var labelElement = this.root_.querySelector(strings.LABEL_SELECTOR);\n    this.label_ = labelElement ? labelFactory(labelElement) : null;\n    var lineRippleElement = this.root_.querySelector(strings.LINE_RIPPLE_SELECTOR);\n    this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n    var outlineElement = this.root_.querySelector(strings.OUTLINE_SELECTOR);\n    this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;\n    var leadingIcon = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n\n    if (leadingIcon) {\n      this.leadingIcon_ = iconFactory(leadingIcon);\n    }\n\n    if (!this.root_.classList.contains(cssClasses.OUTLINED)) {\n      this.ripple_ = this.createRipple_();\n    }\n  };\n  /**\n   * Initializes the select's event listeners and internal state based\n   * on the environment's state.\n   */\n\n\n  MDCSelect.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleChange_ = function () {\n      return _this.foundation_.handleChange();\n    };\n\n    this.handleFocus_ = function () {\n      return _this.foundation_.handleFocus();\n    };\n\n    this.handleBlur_ = function () {\n      return _this.foundation_.handleBlur();\n    };\n\n    this.handleClick_ = function (evt) {\n      _this.selectedText_.focus();\n\n      _this.foundation_.handleClick(_this.getNormalizedXCoordinate_(evt));\n    };\n\n    this.handleKeydown_ = function (evt) {\n      return _this.foundation_.handleKeydown(evt);\n    };\n\n    this.handleMenuItemAction_ = function (evt) {\n      return _this.foundation_.handleMenuItemAction(evt.detail.index);\n    };\n\n    this.handleMenuOpened_ = function () {\n      return _this.foundation_.handleMenuOpened();\n    };\n\n    this.handleMenuClosed_ = function () {\n      return _this.foundation_.handleMenuClosed();\n    };\n\n    this.selectedText_.addEventListener('focus', this.handleFocus_);\n    this.selectedText_.addEventListener('blur', this.handleBlur_);\n    this.selectedText_.addEventListener('click', this.handleClick_);\n    this.selectedText_.addEventListener('keydown', this.handleKeydown_);\n    this.menu_.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n    this.menu_.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n    this.menu_.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction_);\n    this.foundation_.init(); // Sets disabled state in foundation\n\n    this.disabled = this.root_.classList.contains(cssClasses.DISABLED);\n  };\n\n  MDCSelect.prototype.destroy = function () {\n    this.selectedText_.removeEventListener('change', this.handleChange_);\n    this.selectedText_.removeEventListener('focus', this.handleFocus_);\n    this.selectedText_.removeEventListener('blur', this.handleBlur_);\n    this.selectedText_.removeEventListener('keydown', this.handleKeydown_);\n    this.selectedText_.removeEventListener('click', this.handleClick_);\n    this.menu_.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n    this.menu_.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n    this.menu_.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction_);\n    this.menu_.destroy();\n\n    if (this.ripple_) {\n      this.ripple_.destroy();\n    }\n\n    if (this.outline_) {\n      this.outline_.destroy();\n    }\n\n    if (this.leadingIcon_) {\n      this.leadingIcon_.destroy();\n    }\n\n    if (this.helperText_) {\n      this.helperText_.destroy();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  Object.defineProperty(MDCSelect.prototype, \"value\", {\n    get: function () {\n      return this.foundation_.getValue();\n    },\n    set: function (value) {\n      this.foundation_.setValue(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n    get: function () {\n      return this.foundation_.getSelectedIndex();\n    },\n    set: function (selectedIndex) {\n      this.foundation_.setSelectedIndex(selectedIndex,\n      /** closeMenu */\n      true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n    get: function () {\n      return this.foundation_.getDisabled();\n    },\n    set: function (disabled) {\n      this.foundation_.setDisabled(disabled);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n    set: function (label) {\n      this.foundation_.setLeadingIconAriaLabel(label);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n    /**\n     * Sets the text content of the leading icon.\n     */\n    set: function (content) {\n      this.foundation_.setLeadingIconContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n    /**\n     * Sets the text content of the helper text.\n     */\n    set: function (content) {\n      this.foundation_.setHelperTextContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"valid\", {\n    /**\n     * Checks if the select is in a valid state.\n     */\n    get: function () {\n      return this.foundation_.isValid();\n    },\n\n    /**\n     * Sets the current invalid state of the select.\n     */\n    set: function (isValid) {\n      this.foundation_.setValid(isValid);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"required\", {\n    /**\n     * Returns whether the select is required.\n     */\n    get: function () {\n      return this.foundation_.getRequired();\n    },\n\n    /**\n     * Sets the control to the required state.\n     */\n    set: function (isRequired) {\n      this.foundation_.setRequired(isRequired);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Recomputes the outline SVG path for the outline element.\n   */\n\n  MDCSelect.prototype.layout = function () {\n    this.foundation_.layout();\n  };\n\n  MDCSelect.prototype.getDefaultFoundation = function () {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    var adapter = tslib_1.__assign({}, this.getSelectAdapterMethods_(), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_());\n\n    return new MDCSelectFoundation(adapter, this.getFoundationMap_());\n  };\n  /**\n   * Handles setup for the menu.\n   */\n\n\n  MDCSelect.prototype.menuSetup_ = function (menuFactory) {\n    this.menuElement_ = this.root_.querySelector(strings.MENU_SELECTOR);\n    this.menu_ = menuFactory(this.menuElement_);\n  };\n\n  MDCSelect.prototype.createRipple_ = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = tslib_1.__assign({}, MDCRipple.createAdapter({\n      root_: this.selectAnchor_\n    }), {\n      registerInteractionHandler: function (evtType, handler) {\n        return _this.selectedText_.addEventListener(evtType, handler);\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        return _this.selectedText_.removeEventListener(evtType, handler);\n      }\n    }); // tslint:enable:object-literal-sort-keys\n\n\n    return new MDCRipple(this.selectAnchor_, new MDCRippleFoundation(adapter));\n  };\n\n  MDCSelect.prototype.getSelectAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      getSelectedMenuItem: function () {\n        return _this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR);\n      },\n      getMenuItemAttr: function (menuItem, attr) {\n        return menuItem.getAttribute(attr);\n      },\n      setSelectedText: function (text) {\n        return _this.selectedText_.textContent = text;\n      },\n      isSelectedTextFocused: function () {\n        return document.activeElement === _this.selectedText_;\n      },\n      getSelectedTextAttr: function (attr) {\n        return _this.selectedText_.getAttribute(attr);\n      },\n      setSelectedTextAttr: function (attr, value) {\n        return _this.selectedText_.setAttribute(attr, value);\n      },\n      openMenu: function () {\n        return _this.menu_.open = true;\n      },\n      closeMenu: function () {\n        return _this.menu_.open = false;\n      },\n      getAnchorElement: function () {\n        return _this.root_.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n      },\n      setMenuAnchorElement: function (anchorEl) {\n        return _this.menu_.setAnchorElement(anchorEl);\n      },\n      setMenuAnchorCorner: function (anchorCorner) {\n        return _this.menu_.setAnchorCorner(anchorCorner);\n      },\n      setMenuWrapFocus: function (wrapFocus) {\n        return _this.menu_.wrapFocus = wrapFocus;\n      },\n      setAttributeAtIndex: function (index, attributeName, attributeValue) {\n        return _this.menu_.items[index].setAttribute(attributeName, attributeValue);\n      },\n      removeAttributeAtIndex: function (index, attributeName) {\n        return _this.menu_.items[index].removeAttribute(attributeName);\n      },\n      focusMenuItemAtIndex: function (index) {\n        return _this.menu_.items[index].focus();\n      },\n      getMenuItemCount: function () {\n        return _this.menu_.items.length;\n      },\n      getMenuItemValues: function () {\n        return _this.menu_.items.map(function (el) {\n          return el.getAttribute(strings.VALUE_ATTR) || '';\n        });\n      },\n      getMenuItemTextAtIndex: function (index) {\n        return _this.menu_.items[index].textContent;\n      },\n      addClassAtIndex: function (index, className) {\n        return _this.menu_.items[index].classList.add(className);\n      },\n      removeClassAtIndex: function (index, className) {\n        return _this.menu_.items[index].classList.remove(className);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getCommonAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      setRippleCenter: function (normalizedX) {\n        return _this.lineRipple_ && _this.lineRipple_.setRippleCenter(normalizedX);\n      },\n      activateBottomLine: function () {\n        return _this.lineRipple_ && _this.lineRipple_.activate();\n      },\n      deactivateBottomLine: function () {\n        return _this.lineRipple_ && _this.lineRipple_.deactivate();\n      },\n      notifyChange: function (value) {\n        var index = _this.selectedIndex;\n\n        _this.emit(strings.CHANGE_EVENT, {\n          value: value,\n          index: index\n        }, true\n        /* shouldBubble  */\n        );\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getOutlineAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      hasOutline: function () {\n        return Boolean(_this.outline_);\n      },\n      notchOutline: function (labelWidth) {\n        return _this.outline_ && _this.outline_.notch(labelWidth);\n      },\n      closeOutline: function () {\n        return _this.outline_ && _this.outline_.closeNotch();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getLabelAdapterMethods_ = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      hasLabel: function () {\n        return !!_this.label_;\n      },\n      floatLabel: function (shouldFloat) {\n        return _this.label_ && _this.label_.float(shouldFloat);\n      },\n      getLabelWidth: function () {\n        return _this.label_ ? _this.label_.getWidth() : 0;\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n  /**\n   * Calculates where the line ripple should start based on the x coordinate within the component.\n   */\n\n\n  MDCSelect.prototype.getNormalizedXCoordinate_ = function (evt) {\n    var targetClientRect = evt.target.getBoundingClientRect();\n    var xCoordinate = this.isTouchEvent_(evt) ? evt.touches[0].clientX : evt.clientX;\n    return xCoordinate - targetClientRect.left;\n  };\n\n  MDCSelect.prototype.isTouchEvent_ = function (evt) {\n    return Boolean(evt.touches);\n  };\n  /**\n   * Returns a map of all subcomponents to subfoundations.\n   */\n\n\n  MDCSelect.prototype.getFoundationMap_ = function () {\n    return {\n      helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n      leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined\n    };\n  };\n\n  return MDCSelect;\n}(MDCComponent);\n\nexport { MDCSelect };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\nvar MDCSelect = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCSelect, _super);\n    function MDCSelect() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSelect.attachTo = function (root) {\n        return new MDCSelect(root);\n    };\n    MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n        if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }\n        if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }\n        if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }\n        if (menuFactory === void 0) { menuFactory = function (el) { return new MDCMenu(el); }; }\n        if (iconFactory === void 0) { iconFactory = function (el) { return new MDCSelectIcon(el); }; }\n        if (helperTextFactory === void 0) { helperTextFactory = function (el) { return new MDCSelectHelperText(el); }; }\n        this.selectAnchor_ = this.root_.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n        this.selectedText_ = this.root_.querySelector(strings.SELECTED_TEXT_SELECTOR);\n        if (!this.selectedText_) {\n            throw new Error('MDCSelect: Missing required element: The following selector must be present: ' +\n                (\"'\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n        }\n        if (this.selectedText_.hasAttribute(strings.ARIA_CONTROLS)) {\n            var helperTextElement = document.getElementById(this.selectedText_.getAttribute(strings.ARIA_CONTROLS));\n            if (helperTextElement) {\n                this.helperText_ = helperTextFactory(helperTextElement);\n            }\n        }\n        this.menuSetup_(menuFactory);\n        var labelElement = this.root_.querySelector(strings.LABEL_SELECTOR);\n        this.label_ = labelElement ? labelFactory(labelElement) : null;\n        var lineRippleElement = this.root_.querySelector(strings.LINE_RIPPLE_SELECTOR);\n        this.lineRipple_ = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n        var outlineElement = this.root_.querySelector(strings.OUTLINE_SELECTOR);\n        this.outline_ = outlineElement ? outlineFactory(outlineElement) : null;\n        var leadingIcon = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n        if (leadingIcon) {\n            this.leadingIcon_ = iconFactory(leadingIcon);\n        }\n        if (!this.root_.classList.contains(cssClasses.OUTLINED)) {\n            this.ripple_ = this.createRipple_();\n        }\n    };\n    /**\n     * Initializes the select's event listeners and internal state based\n     * on the environment's state.\n     */\n    MDCSelect.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleChange_ = function () { return _this.foundation_.handleChange(); };\n        this.handleFocus_ = function () { return _this.foundation_.handleFocus(); };\n        this.handleBlur_ = function () { return _this.foundation_.handleBlur(); };\n        this.handleClick_ = function (evt) {\n            _this.selectedText_.focus();\n            _this.foundation_.handleClick(_this.getNormalizedXCoordinate_(evt));\n        };\n        this.handleKeydown_ = function (evt) { return _this.foundation_.handleKeydown(evt); };\n        this.handleMenuItemAction_ = function (evt) { return _this.foundation_.handleMenuItemAction(evt.detail.index); };\n        this.handleMenuOpened_ = function () { return _this.foundation_.handleMenuOpened(); };\n        this.handleMenuClosed_ = function () { return _this.foundation_.handleMenuClosed(); };\n        this.selectedText_.addEventListener('focus', this.handleFocus_);\n        this.selectedText_.addEventListener('blur', this.handleBlur_);\n        this.selectedText_.addEventListener('click', this.handleClick_);\n        this.selectedText_.addEventListener('keydown', this.handleKeydown_);\n        this.menu_.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n        this.menu_.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n        this.menu_.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction_);\n        this.foundation_.init();\n        // Sets disabled state in foundation\n        this.disabled = this.root_.classList.contains(cssClasses.DISABLED);\n    };\n    MDCSelect.prototype.destroy = function () {\n        this.selectedText_.removeEventListener('change', this.handleChange_);\n        this.selectedText_.removeEventListener('focus', this.handleFocus_);\n        this.selectedText_.removeEventListener('blur', this.handleBlur_);\n        this.selectedText_.removeEventListener('keydown', this.handleKeydown_);\n        this.selectedText_.removeEventListener('click', this.handleClick_);\n        this.menu_.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed_);\n        this.menu_.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened_);\n        this.menu_.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction_);\n        this.menu_.destroy();\n        if (this.ripple_) {\n            this.ripple_.destroy();\n        }\n        if (this.outline_) {\n            this.outline_.destroy();\n        }\n        if (this.leadingIcon_) {\n            this.leadingIcon_.destroy();\n        }\n        if (this.helperText_) {\n            this.helperText_.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    Object.defineProperty(MDCSelect.prototype, \"value\", {\n        get: function () {\n            return this.foundation_.getValue();\n        },\n        set: function (value) {\n            this.foundation_.setValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n        get: function () {\n            return this.foundation_.getSelectedIndex();\n        },\n        set: function (selectedIndex) {\n            this.foundation_.setSelectedIndex(selectedIndex, /** closeMenu */ true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n        get: function () {\n            return this.foundation_.getDisabled();\n        },\n        set: function (disabled) {\n            this.foundation_.setDisabled(disabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n        set: function (label) {\n            this.foundation_.setLeadingIconAriaLabel(label);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n        /**\n         * Sets the text content of the leading icon.\n         */\n        set: function (content) {\n            this.foundation_.setLeadingIconContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n        /**\n         * Sets the text content of the helper text.\n         */\n        set: function (content) {\n            this.foundation_.setHelperTextContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"valid\", {\n        /**\n         * Checks if the select is in a valid state.\n         */\n        get: function () {\n            return this.foundation_.isValid();\n        },\n        /**\n         * Sets the current invalid state of the select.\n         */\n        set: function (isValid) {\n            this.foundation_.setValid(isValid);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"required\", {\n        /**\n         * Returns whether the select is required.\n         */\n        get: function () {\n            return this.foundation_.getRequired();\n        },\n        /**\n         * Sets the control to the required state.\n         */\n        set: function (isRequired) {\n            this.foundation_.setRequired(isRequired);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n    MDCSelect.prototype.layout = function () {\n        this.foundation_.layout();\n    };\n    MDCSelect.prototype.getDefaultFoundation = function () {\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = tslib_1.__assign({}, this.getSelectAdapterMethods_(), this.getCommonAdapterMethods_(), this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_());\n        return new MDCSelectFoundation(adapter, this.getFoundationMap_());\n    };\n    /**\n     * Handles setup for the menu.\n     */\n    MDCSelect.prototype.menuSetup_ = function (menuFactory) {\n        this.menuElement_ = this.root_.querySelector(strings.MENU_SELECTOR);\n        this.menu_ = menuFactory(this.menuElement_);\n    };\n    MDCSelect.prototype.createRipple_ = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = tslib_1.__assign({}, MDCRipple.createAdapter({ root_: this.selectAnchor_ }), { registerInteractionHandler: function (evtType, handler) { return _this.selectedText_.addEventListener(evtType, handler); }, deregisterInteractionHandler: function (evtType, handler) { return _this.selectedText_.removeEventListener(evtType, handler); } });\n        // tslint:enable:object-literal-sort-keys\n        return new MDCRipple(this.selectAnchor_, new MDCRippleFoundation(adapter));\n    };\n    MDCSelect.prototype.getSelectAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getSelectedMenuItem: function () { return _this.menuElement_.querySelector(strings.SELECTED_ITEM_SELECTOR); },\n            getMenuItemAttr: function (menuItem, attr) { return menuItem.getAttribute(attr); },\n            setSelectedText: function (text) { return _this.selectedText_.textContent = text; },\n            isSelectedTextFocused: function () { return document.activeElement === _this.selectedText_; },\n            getSelectedTextAttr: function (attr) { return _this.selectedText_.getAttribute(attr); },\n            setSelectedTextAttr: function (attr, value) { return _this.selectedText_.setAttribute(attr, value); },\n            openMenu: function () { return _this.menu_.open = true; },\n            closeMenu: function () { return _this.menu_.open = false; },\n            getAnchorElement: function () { return _this.root_.querySelector(strings.SELECT_ANCHOR_SELECTOR); },\n            setMenuAnchorElement: function (anchorEl) { return _this.menu_.setAnchorElement(anchorEl); },\n            setMenuAnchorCorner: function (anchorCorner) { return _this.menu_.setAnchorCorner(anchorCorner); },\n            setMenuWrapFocus: function (wrapFocus) { return _this.menu_.wrapFocus = wrapFocus; },\n            setAttributeAtIndex: function (index, attributeName, attributeValue) {\n                return _this.menu_.items[index].setAttribute(attributeName, attributeValue);\n            },\n            removeAttributeAtIndex: function (index, attributeName) {\n                return _this.menu_.items[index].removeAttribute(attributeName);\n            },\n            focusMenuItemAtIndex: function (index) { return _this.menu_.items[index].focus(); },\n            getMenuItemCount: function () { return _this.menu_.items.length; },\n            getMenuItemValues: function () { return _this.menu_.items.map(function (el) { return el.getAttribute(strings.VALUE_ATTR) || ''; }); },\n            getMenuItemTextAtIndex: function (index) { return _this.menu_.items[index].textContent; },\n            addClassAtIndex: function (index, className) { return _this.menu_.items[index].classList.add(className); },\n            removeClassAtIndex: function (index, className) { return _this.menu_.items[index].classList.remove(className); },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getCommonAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            addClass: function (className) { return _this.root_.classList.add(className); },\n            removeClass: function (className) { return _this.root_.classList.remove(className); },\n            hasClass: function (className) { return _this.root_.classList.contains(className); },\n            setRippleCenter: function (normalizedX) { return _this.lineRipple_ && _this.lineRipple_.setRippleCenter(normalizedX); },\n            activateBottomLine: function () { return _this.lineRipple_ && _this.lineRipple_.activate(); },\n            deactivateBottomLine: function () { return _this.lineRipple_ && _this.lineRipple_.deactivate(); },\n            notifyChange: function (value) {\n                var index = _this.selectedIndex;\n                _this.emit(strings.CHANGE_EVENT, { value: value, index: index }, true /* shouldBubble  */);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getOutlineAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            hasOutline: function () { return Boolean(_this.outline_); },\n            notchOutline: function (labelWidth) { return _this.outline_ && _this.outline_.notch(labelWidth); },\n            closeOutline: function () { return _this.outline_ && _this.outline_.closeNotch(); },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getLabelAdapterMethods_ = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            hasLabel: function () { return !!_this.label_; },\n            floatLabel: function (shouldFloat) { return _this.label_ && _this.label_.float(shouldFloat); },\n            getLabelWidth: function () { return _this.label_ ? _this.label_.getWidth() : 0; },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    /**\n     * Calculates where the line ripple should start based on the x coordinate within the component.\n     */\n    MDCSelect.prototype.getNormalizedXCoordinate_ = function (evt) {\n        var targetClientRect = evt.target.getBoundingClientRect();\n        var xCoordinate = this.isTouchEvent_(evt) ? evt.touches[0].clientX : evt.clientX;\n        return xCoordinate - targetClientRect.left;\n    };\n    MDCSelect.prototype.isTouchEvent_ = function (evt) {\n        return Boolean(evt.touches);\n    };\n    /**\n     * Returns a map of all subcomponents to subfoundations.\n     */\n    MDCSelect.prototype.getFoundationMap_ = function () {\n        return {\n            helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n            leadingIcon: this.leadingIcon_ ? this.leadingIcon_.foundation : undefined,\n        };\n    };\n    return MDCSelect;\n}(MDCComponent));\nexport { MDCSelect };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}