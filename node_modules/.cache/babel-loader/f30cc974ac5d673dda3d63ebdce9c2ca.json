{"ast":null,"code":"import { __assign, __read, __rest, __spread } from \"tslib\";\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport { useFoundation, raf } from '@rmwc/base';\nimport { MDCSelectFoundation, cssClasses } from '@material/select';\nexport var useSelectFoundation = function useSelectFoundation(props) {\n  var _a;\n\n  var _b = __read(useState(), 2),\n      notchWidth = _b[0],\n      setNotchWidth = _b[1];\n\n  var _c = __read(useState(false), 2),\n      lineRippleActive = _c[0],\n      setLineRippleActive = _c[1];\n\n  var _d = __read(useState(0), 2),\n      lineRippleCenter = _d[0],\n      setLineRippleCenter = _d[1];\n\n  var _e = __read(useState(false), 2),\n      floatLabel = _e[0],\n      setFloatLabel = _e[1];\n\n  var _f = __read(useState(false), 2),\n      menuOpen = _f[0],\n      setMenuOpen = _f[1];\n\n  var _g = __read(useState(''), 2),\n      selectedTextContent = _g[0],\n      setSelectedTextContent = _g[1];\n\n  var selectedIndex = useRef(-1);\n  var floatingLabel = useRef();\n\n  var setFloatingLabel = function setFloatingLabel(api) {\n    floatingLabel.current = api;\n  };\n\n  var menu = useRef();\n\n  var setMenu = function setMenu(api) {\n    menu.current = api;\n  };\n\n  var anchor = useRef(null);\n\n  var setAnchor = function setAnchor(el) {\n    anchor.current = el;\n  };\n\n  var leadingIcon = useRef();\n\n  var setLeadingIcon = function setLeadingIcon(api) {\n    leadingIcon.current = api;\n  };\n\n  var nativeControl = useRef();\n\n  var setNativeControl = function setNativeControl(el) {\n    nativeControl.current = el;\n  };\n\n  var silenceChange = useRef(false);\n\n  var _h = useFoundation({\n    props: props,\n    elements: {\n      rootEl: true,\n      selectedTextEl: true\n    },\n    foundation: function foundation(_a) {\n      var rootEl = _a.rootEl,\n          selectedTextEl = _a.selectedTextEl,\n          getProps = _a.getProps,\n          emit = _a.emit;\n\n      var isNative = function isNative() {\n        return !getProps().enhanced;\n      };\n\n      var getSelectAdapterMethods = function getSelectAdapterMethods() {\n        var items = function items() {\n          var _a, _b;\n\n          return (isNative() ? Array.apply(null, (_a = nativeControl.current) === null || _a === void 0 ? void 0 : _a.options) : (_b = menu.current) === null || _b === void 0 ? void 0 : _b.items()) || [];\n        };\n\n        var getValue = function getValue(el) {\n          return el.getAttribute('data-value') || el.getAttribute('value') || '';\n        };\n\n        return {\n          getSelectedMenuItem: function getSelectedMenuItem() {\n            var _a, _b, _c;\n\n            if (isNative()) {\n              return ((_a = nativeControl.current) === null || _a === void 0 ? void 0 : _a.selectedOptions[0]) || null;\n            }\n\n            if (selectedIndex.current === -1) {\n              return ((_c = (_b = menu.current) === null || _b === void 0 ? void 0 : _b.getSurfaceElement()) === null || _c === void 0 ? void 0 : _c.querySelector('.mdc-list-item--activated')) || null;\n            } else {\n              return items()[selectedIndex.current];\n            }\n          },\n          getMenuItemAttr: function getMenuItemAttr(menuItem, attr) {\n            if (attr === 'data-value') {\n              return getValue(menuItem);\n            }\n\n            return menuItem.getAttribute(attr);\n          },\n          setSelectedText: function setSelectedText(text) {\n            setSelectedTextContent(text);\n          },\n          isSelectedTextFocused: function isSelectedTextFocused() {\n            return !!(selectedTextEl.ref && selectedTextEl.ref === document.activeElement);\n          },\n          getSelectedTextAttr: function getSelectedTextAttr(attr) {\n            return selectedTextEl.getProp(attr);\n          },\n          setSelectedTextAttr: function setSelectedTextAttr(attr, value) {\n            if (attr === 'tabindex') {\n              // Fixes bug 595 https://github.com/jamesmfriedman/rmwc/issues/595.\n              // Native selects don't need tabIndexes on the root element\n              if (isNative()) return;\n              attr = 'tabIndex';\n            }\n\n            selectedTextEl.setProp(attr, value);\n          },\n          openMenu: function openMenu() {\n            setMenuOpen(true);\n          },\n          closeMenu: function closeMenu() {\n            setMenuOpen(false);\n          },\n          getAnchorElement: function getAnchorElement() {\n            return anchor.current;\n          },\n          setMenuAnchorElement: function setMenuAnchorElement(anchorEl) {\n            return setAnchor(anchorEl);\n          },\n          setMenuAnchorCorner: function setMenuAnchorCorner(anchorCorner) {\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAnchorCorner(anchorCorner);\n          },\n          setMenuWrapFocus: function setMenuWrapFocus(wrapFocus) {//(this.menu_.wrapFocus = wrapFocus)\n          },\n          setAttributeAtIndex: function setAttributeAtIndex() {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAttributeForElementIndex.apply(_a, __spread(args));\n          },\n          removeAttributeAtIndex: function removeAttributeAtIndex(index, attributeName) {\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.items()[index].removeAttribute(attributeName);\n          },\n          focusMenuItemAtIndex: function focusMenuItemAtIndex() {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.focusItemAtIndex.apply(_a, __spread(args));\n          },\n          getMenuItemCount: function getMenuItemCount() {\n            return items().length;\n          },\n          getMenuItemValues: function getMenuItemValues() {\n            return items().map(getValue) || [];\n          },\n          getMenuItemTextAtIndex: function getMenuItemTextAtIndex(index) {\n            return items()[index].textContent;\n          },\n          addClassAtIndex: function addClassAtIndex() {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.addClassToElementIndex.apply(_a, __spread(args));\n          },\n          removeClassAtIndex: function removeClassAtIndex() {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var _a;\n\n            return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.removeClassFromElementAtIndex.apply(_a, __spread(args));\n          }\n        };\n      };\n\n      var getCommonAdapterMethods = function getCommonAdapterMethods() {\n        return {\n          addClass: function addClass(className) {\n            rootEl.addClass(className);\n          },\n          removeClass: function removeClass(className) {\n            rootEl.removeClass(className);\n          },\n          hasClass: function hasClass(className) {\n            return rootEl.hasClass(className);\n          },\n          isRtl: function isRtl() {\n            return rootEl.ref && window.getComputedStyle(rootEl.ref).getPropertyValue('direction') === 'rtl';\n          },\n          setRippleCenter: function setRippleCenter(normalizedX) {\n            setLineRippleCenter(normalizedX);\n          },\n          activateBottomLine: function activateBottomLine() {\n            return setLineRippleActive(true);\n          },\n          deactivateBottomLine: function deactivateBottomLine() {\n            return setLineRippleActive(false);\n          },\n          notifyChange: function notifyChange(value) {\n            if (!silenceChange.current) {\n              emit('onChange', {\n                index: selectedIndex.current,\n                value: value\n              }, true);\n            }\n          }\n        };\n      };\n\n      var getOutlineAdapterMethods = function getOutlineAdapterMethods() {\n        return {\n          hasOutline: function hasOutline() {\n            return !!getProps().outlined;\n          },\n          notchOutline: function notchOutline(labelWidth) {\n            setNotchWidth(labelWidth);\n          },\n          closeOutline: function closeOutline() {\n            setNotchWidth(undefined);\n          }\n        };\n      };\n\n      var getLabelAdapterMethods = function getLabelAdapterMethods() {\n        return {\n          hasLabel: function hasLabel() {\n            return !!getProps().label;\n          },\n          floatLabel: function floatLabel(shouldFloat) {\n            setFloatLabel(shouldFloat);\n          },\n          getLabelWidth: function getLabelWidth() {\n            var _a;\n\n            return ((_a = floatingLabel.current) === null || _a === void 0 ? void 0 : _a.getWidth()) || 0;\n          }\n        };\n      };\n\n      var getFoundationMap = function getFoundationMap() {\n        return {\n          leadingIcon: leadingIcon.current && leadingIcon.current.getFoundation() || undefined\n        };\n      };\n\n      var f = new MDCSelectFoundation(__assign(__assign(__assign(__assign({}, getSelectAdapterMethods()), getCommonAdapterMethods()), getOutlineAdapterMethods()), getLabelAdapterMethods()), getFoundationMap()); // This foundation requires a bit of monkey patching\n      // in order to get placeholders working correctly\n\n      var adapter = f.adapter_; // @ts-ignore private override\n\n      f.updateLabel_ = function () {\n        var doWork = function doWork() {\n          var value = f.getValue(); // This is the line we have to override to work with placeholders\n          // we need to consider haveing a placeholder as a valid value\n\n          var optionHasValue = !!getProps().placeholder || value.length > 0;\n\n          if (adapter.hasLabel()) {\n            f.notchOutline(optionHasValue);\n\n            if (!adapter.hasClass(cssClasses.FOCUSED)) {\n              adapter.floatLabel(optionHasValue);\n            }\n          }\n        };\n\n        doWork();\n      }; // This is only set one time in the constructor which\n      // is before React even has a chance to render...\n      // Make it a dynamic getter\n\n\n      Object.defineProperty(f, 'menuItemValues_', {\n        get: function get() {\n          return adapter.getMenuItemValues();\n        }\n      }); // We have to add some logic after the original init function\n      // in order to sync placeholder labels\n      // Also... MDC fires change events on init which is the\n      // exact opposite of what we want to happen with normal selects\n\n      var init = f.init.bind(f);\n\n      f.init = function () {\n        silenceChange.current = true;\n        init();\n        var placeholder = String(getProps().placeholder || '');\n\n        if (!f.getValue() && placeholder) {\n          adapter.setSelectedText(placeholder);\n        }\n\n        silenceChange.current = false;\n      };\n\n      return f;\n    }\n  }),\n      foundation = _h.foundation,\n      elements = __rest(_h, [\"foundation\"]);\n\n  var selectedTextEl = elements.selectedTextEl,\n      rootEl = elements.rootEl;\n  var handleFocus = useCallback(function (evt) {\n    var _a;\n\n    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n    foundation.handleFocus();\n  }, [props.onFocus, foundation]);\n  var handleBlur = useCallback(function (evt) {\n    var _a;\n\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n    foundation.handleBlur();\n  }, [props.onBlur, foundation]);\n  var handleClick = useCallback(function (evt) {\n    var _a; // Fixes an issue where clicking on the select when it\n    // is already opens fires events in an incorrect order.\n    // We can't use Reacts menuOpen variable because it is\n    // ahead of the actual DOM animation...\n    // Not ideal, but no other way currently\n\n\n    if ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector('.mdc-menu-surface--open')) {\n      return;\n    }\n\n    var getNormalizedXCoordinate = function getNormalizedXCoordinate(evt) {\n      var targetClientRect = evt.target.getBoundingClientRect();\n      var xCoordinate = evt.clientX;\n      return xCoordinate - targetClientRect.left;\n    };\n\n    var coord = getNormalizedXCoordinate(evt);\n    selectedTextEl.ref && selectedTextEl.ref.focus();\n    foundation.handleClick(coord);\n  }, [foundation, selectedTextEl.ref, rootEl.ref]);\n  var handleKeydown = useCallback(function (evt) {\n    var _a;\n\n    (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n    foundation.handleKeydown(evt);\n  }, [foundation, props.onKeyDown]);\n  var handleMenuSelected = useCallback(function (index) {\n    selectedIndex.current = index;\n    foundation.handleMenuItemAction(index);\n  }, [foundation]);\n  var handleMenuOpened = useCallback(function () {\n    foundation.handleMenuOpened();\n  }, [foundation]);\n  var handleMenuClosed = useCallback(function () {\n    setMenuOpen(false);\n    foundation.handleMenuClosed();\n  }, [foundation]); // For controlled selects that are enhanced\n  // we need to jump through some checks to see if we need to update the\n  // value in our foundation\n\n  var foundationValue = foundation.getValue(); // Use the value OR the default value if there is no index selected\n\n  var value = (_a = props.value) !== null && _a !== void 0 ? _a : selectedIndex.current === -1 ? props.defaultValue : undefined; // Use the length of the options as an indication we need to re-render and\n  // check if our value is accurate. This is for situations where people populate the select\n  // async. We can't rely on object identity since lots of people pass options inline.\n\n  var optionsLength = Array.isArray(props.options) ? props.options.length : Object.values(props.options || {}).length; // MDC Select is a bit of a mess here...\n  // - We have to set our value\n  // - In the event of a controlled value change, we don't want to fire a change event\n  // - Jump through stupid hoops to prevent the event from firing\n\n  useEffect(function () {\n    silenceChange.current = true;\n\n    if (value !== undefined && value !== foundationValue) {\n      // @ts-ignore unsafe private variable access\n      var index = foundation.menuItemValues_.indexOf(value);\n      selectedIndex.current = index;\n      foundation.setValue(value || '');\n    }\n\n    raf(function () {\n      silenceChange.current = false;\n    });\n  }, [value, foundationValue, optionsLength, foundation]); // Disabled\n\n  useEffect(function () {\n    foundation.setDisabled(!!props.disabled);\n  }, [foundation, props.disabled]); // Set anchor\n\n  useEffect(function () {\n    var _a;\n\n    rootEl.ref && ((_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAnchorElement(rootEl.ref));\n  }, [rootEl.ref]);\n  return __assign({\n    notchWidth: notchWidth,\n    menuOpen: menuOpen,\n    lineRippleActive: lineRippleActive,\n    lineRippleCenter: lineRippleCenter,\n    floatLabel: floatLabel,\n    selectedIndex: selectedIndex.current,\n    selectedTextContent: selectedTextContent,\n    setFloatingLabel: setFloatingLabel,\n    setMenu: setMenu,\n    setLeadingIcon: setLeadingIcon,\n    setNativeControl: setNativeControl,\n    handleFocus: handleFocus,\n    handleBlur: handleBlur,\n    handleClick: handleClick,\n    handleKeydown: handleKeydown,\n    handleMenuClosed: handleMenuClosed,\n    handleMenuOpened: handleMenuOpened,\n    handleMenuSelected: handleMenuSelected\n  }, elements);\n};","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/website/giles7777.github.io/node_modules/@rmwc/select/next/select/foundation.js"],"names":["__assign","__read","__rest","__spread","useCallback","useState","useRef","useEffect","useFoundation","raf","MDCSelectFoundation","cssClasses","useSelectFoundation","props","_a","_b","notchWidth","setNotchWidth","_c","lineRippleActive","setLineRippleActive","_d","lineRippleCenter","setLineRippleCenter","_e","floatLabel","setFloatLabel","_f","menuOpen","setMenuOpen","_g","selectedTextContent","setSelectedTextContent","selectedIndex","floatingLabel","setFloatingLabel","api","current","menu","setMenu","anchor","setAnchor","el","leadingIcon","setLeadingIcon","nativeControl","setNativeControl","silenceChange","_h","elements","rootEl","selectedTextEl","foundation","getProps","emit","isNative","enhanced","getSelectAdapterMethods","items","Array","apply","options","getValue","getAttribute","getSelectedMenuItem","selectedOptions","getSurfaceElement","querySelector","getMenuItemAttr","menuItem","attr","setSelectedText","text","isSelectedTextFocused","ref","document","activeElement","getSelectedTextAttr","getProp","setSelectedTextAttr","value","setProp","openMenu","closeMenu","getAnchorElement","setMenuAnchorElement","anchorEl","setMenuAnchorCorner","anchorCorner","setAnchorCorner","setMenuWrapFocus","wrapFocus","setAttributeAtIndex","args","_i","arguments","length","setAttributeForElementIndex","removeAttributeAtIndex","index","attributeName","removeAttribute","focusMenuItemAtIndex","focusItemAtIndex","getMenuItemCount","getMenuItemValues","map","getMenuItemTextAtIndex","textContent","addClassAtIndex","addClassToElementIndex","removeClassAtIndex","removeClassFromElementAtIndex","getCommonAdapterMethods","addClass","className","removeClass","hasClass","isRtl","window","getComputedStyle","getPropertyValue","setRippleCenter","normalizedX","activateBottomLine","deactivateBottomLine","notifyChange","getOutlineAdapterMethods","hasOutline","outlined","notchOutline","labelWidth","closeOutline","undefined","getLabelAdapterMethods","hasLabel","label","shouldFloat","getLabelWidth","getWidth","getFoundationMap","getFoundation","f","adapter","adapter_","updateLabel_","doWork","optionHasValue","placeholder","FOCUSED","Object","defineProperty","get","init","bind","String","handleFocus","evt","onFocus","call","handleBlur","onBlur","handleClick","getNormalizedXCoordinate","targetClientRect","target","getBoundingClientRect","xCoordinate","clientX","left","coord","focus","handleKeydown","onKeyDown","handleMenuSelected","handleMenuItemAction","handleMenuOpened","handleMenuClosed","foundationValue","defaultValue","optionsLength","isArray","values","menuItemValues_","indexOf","setValue","setDisabled","disabled","setAnchorElement"],"mappings":"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","sourcesContent":["import { __assign, __read, __rest, __spread } from \"tslib\";\nimport { useCallback, useState, useRef, useEffect } from 'react';\nimport { useFoundation, raf } from '@rmwc/base';\nimport { MDCSelectFoundation, cssClasses } from '@material/select';\nexport var useSelectFoundation = function (props) {\n    var _a;\n    var _b = __read(useState(), 2), notchWidth = _b[0], setNotchWidth = _b[1];\n    var _c = __read(useState(false), 2), lineRippleActive = _c[0], setLineRippleActive = _c[1];\n    var _d = __read(useState(0), 2), lineRippleCenter = _d[0], setLineRippleCenter = _d[1];\n    var _e = __read(useState(false), 2), floatLabel = _e[0], setFloatLabel = _e[1];\n    var _f = __read(useState(false), 2), menuOpen = _f[0], setMenuOpen = _f[1];\n    var _g = __read(useState(''), 2), selectedTextContent = _g[0], setSelectedTextContent = _g[1];\n    var selectedIndex = useRef(-1);\n    var floatingLabel = useRef();\n    var setFloatingLabel = function (api) {\n        floatingLabel.current = api;\n    };\n    var menu = useRef();\n    var setMenu = function (api) {\n        menu.current = api;\n    };\n    var anchor = useRef(null);\n    var setAnchor = function (el) {\n        anchor.current = el;\n    };\n    var leadingIcon = useRef();\n    var setLeadingIcon = function (api) {\n        leadingIcon.current = api;\n    };\n    var nativeControl = useRef();\n    var setNativeControl = function (el) {\n        nativeControl.current = el;\n    };\n    var silenceChange = useRef(false);\n    var _h = useFoundation({\n        props: props,\n        elements: { rootEl: true, selectedTextEl: true },\n        foundation: function (_a) {\n            var rootEl = _a.rootEl, selectedTextEl = _a.selectedTextEl, getProps = _a.getProps, emit = _a.emit;\n            var isNative = function () { return !getProps().enhanced; };\n            var getSelectAdapterMethods = function () {\n                var items = function () {\n                    var _a, _b;\n                    return (isNative()\n                        ? Array.apply(null, (_a = nativeControl.current) === null || _a === void 0 ? void 0 : _a.options)\n                        : (_b = menu.current) === null || _b === void 0 ? void 0 : _b.items()) || [];\n                };\n                var getValue = function (el) {\n                    return (el.getAttribute('data-value') || el.getAttribute('value') || '');\n                };\n                return {\n                    getSelectedMenuItem: function () {\n                        var _a, _b, _c;\n                        if (isNative()) {\n                            return ((_a = nativeControl.current) === null || _a === void 0 ? void 0 : _a.selectedOptions[0]) || null;\n                        }\n                        if (selectedIndex.current === -1) {\n                            return (((_c = (_b = menu.current) === null || _b === void 0 ? void 0 : _b.getSurfaceElement()) === null || _c === void 0 ? void 0 : _c.querySelector('.mdc-list-item--activated')) || null);\n                        }\n                        else {\n                            return items()[selectedIndex.current];\n                        }\n                    },\n                    getMenuItemAttr: function (menuItem, attr) {\n                        if (attr === 'data-value') {\n                            return getValue(menuItem);\n                        }\n                        return menuItem.getAttribute(attr);\n                    },\n                    setSelectedText: function (text) {\n                        setSelectedTextContent(text);\n                    },\n                    isSelectedTextFocused: function () {\n                        return !!(selectedTextEl.ref &&\n                            selectedTextEl.ref === document.activeElement);\n                    },\n                    getSelectedTextAttr: function (attr) { return selectedTextEl.getProp(attr); },\n                    setSelectedTextAttr: function (attr, value) {\n                        if (attr === 'tabindex') {\n                            // Fixes bug 595 https://github.com/jamesmfriedman/rmwc/issues/595.\n                            // Native selects don't need tabIndexes on the root element\n                            if (isNative())\n                                return;\n                            attr = 'tabIndex';\n                        }\n                        selectedTextEl.setProp(attr, value);\n                    },\n                    openMenu: function () {\n                        setMenuOpen(true);\n                    },\n                    closeMenu: function () {\n                        setMenuOpen(false);\n                    },\n                    getAnchorElement: function () { return anchor.current; },\n                    setMenuAnchorElement: function (anchorEl) { return setAnchor(anchorEl); },\n                    setMenuAnchorCorner: function (anchorCorner) { var _a; return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAnchorCorner(anchorCorner); },\n                    setMenuWrapFocus: function (wrapFocus) {\n                        //(this.menu_.wrapFocus = wrapFocus)\n                    },\n                    setAttributeAtIndex: function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var _a;\n                        return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAttributeForElementIndex.apply(_a, __spread(args));\n                    },\n                    removeAttributeAtIndex: function (index, attributeName) { var _a; return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.items()[index].removeAttribute(attributeName); },\n                    focusMenuItemAtIndex: function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var _a;\n                        return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.focusItemAtIndex.apply(_a, __spread(args));\n                    },\n                    getMenuItemCount: function () {\n                        return items().length;\n                    },\n                    getMenuItemValues: function () { return items().map(getValue) || []; },\n                    getMenuItemTextAtIndex: function (index) {\n                        return items()[index].textContent;\n                    },\n                    addClassAtIndex: function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var _a;\n                        return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.addClassToElementIndex.apply(_a, __spread(args));\n                    },\n                    removeClassAtIndex: function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var _a;\n                        return (_a = menu.current) === null || _a === void 0 ? void 0 : _a.removeClassFromElementAtIndex.apply(_a, __spread(args));\n                    }\n                };\n            };\n            var getCommonAdapterMethods = function () {\n                return {\n                    addClass: function (className) {\n                        rootEl.addClass(className);\n                    },\n                    removeClass: function (className) {\n                        rootEl.removeClass(className);\n                    },\n                    hasClass: function (className) { return rootEl.hasClass(className); },\n                    isRtl: function () {\n                        return rootEl.ref &&\n                            window\n                                .getComputedStyle(rootEl.ref)\n                                .getPropertyValue('direction') === 'rtl';\n                    },\n                    setRippleCenter: function (normalizedX) {\n                        setLineRippleCenter(normalizedX);\n                    },\n                    activateBottomLine: function () { return setLineRippleActive(true); },\n                    deactivateBottomLine: function () { return setLineRippleActive(false); },\n                    notifyChange: function (value) {\n                        if (!silenceChange.current) {\n                            emit('onChange', {\n                                index: selectedIndex.current,\n                                value: value\n                            }, true);\n                        }\n                    }\n                };\n            };\n            var getOutlineAdapterMethods = function () {\n                return {\n                    hasOutline: function () { return !!getProps().outlined; },\n                    notchOutline: function (labelWidth) {\n                        setNotchWidth(labelWidth);\n                    },\n                    closeOutline: function () {\n                        setNotchWidth(undefined);\n                    }\n                };\n            };\n            var getLabelAdapterMethods = function () {\n                return {\n                    hasLabel: function () { return !!getProps().label; },\n                    floatLabel: function (shouldFloat) {\n                        setFloatLabel(shouldFloat);\n                    },\n                    getLabelWidth: function () {\n                        var _a;\n                        return ((_a = floatingLabel.current) === null || _a === void 0 ? void 0 : _a.getWidth()) || 0;\n                    }\n                };\n            };\n            var getFoundationMap = function () {\n                return {\n                    leadingIcon: (leadingIcon.current && leadingIcon.current.getFoundation()) ||\n                        undefined\n                };\n            };\n            var f = new MDCSelectFoundation(__assign(__assign(__assign(__assign({}, getSelectAdapterMethods()), getCommonAdapterMethods()), getOutlineAdapterMethods()), getLabelAdapterMethods()), getFoundationMap());\n            // This foundation requires a bit of monkey patching\n            // in order to get placeholders working correctly\n            var adapter = f.adapter_;\n            // @ts-ignore private override\n            f.updateLabel_ = function () {\n                var doWork = function () {\n                    var value = f.getValue();\n                    // This is the line we have to override to work with placeholders\n                    // we need to consider haveing a placeholder as a valid value\n                    var optionHasValue = !!getProps().placeholder || value.length > 0;\n                    if (adapter.hasLabel()) {\n                        f.notchOutline(optionHasValue);\n                        if (!adapter.hasClass(cssClasses.FOCUSED)) {\n                            adapter.floatLabel(optionHasValue);\n                        }\n                    }\n                };\n                doWork();\n            };\n            // This is only set one time in the constructor which\n            // is before React even has a chance to render...\n            // Make it a dynamic getter\n            Object.defineProperty(f, 'menuItemValues_', {\n                get: function () {\n                    return adapter.getMenuItemValues();\n                }\n            });\n            // We have to add some logic after the original init function\n            // in order to sync placeholder labels\n            // Also... MDC fires change events on init which is the\n            // exact opposite of what we want to happen with normal selects\n            var init = f.init.bind(f);\n            f.init = function () {\n                silenceChange.current = true;\n                init();\n                var placeholder = String(getProps().placeholder || '');\n                if (!f.getValue() && placeholder) {\n                    adapter.setSelectedText(placeholder);\n                }\n                silenceChange.current = false;\n            };\n            return f;\n        }\n    }), foundation = _h.foundation, elements = __rest(_h, [\"foundation\"]);\n    var selectedTextEl = elements.selectedTextEl, rootEl = elements.rootEl;\n    var handleFocus = useCallback(function (evt) {\n        var _a;\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n        foundation.handleFocus();\n    }, [props.onFocus, foundation]);\n    var handleBlur = useCallback(function (evt) {\n        var _a;\n        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n        foundation.handleBlur();\n    }, [props.onBlur, foundation]);\n    var handleClick = useCallback(function (evt) {\n        var _a;\n        // Fixes an issue where clicking on the select when it\n        // is already opens fires events in an incorrect order.\n        // We can't use Reacts menuOpen variable because it is\n        // ahead of the actual DOM animation...\n        // Not ideal, but no other way currently\n        if ((_a = rootEl.ref) === null || _a === void 0 ? void 0 : _a.querySelector('.mdc-menu-surface--open')) {\n            return;\n        }\n        var getNormalizedXCoordinate = function (evt) {\n            var targetClientRect = evt.target.getBoundingClientRect();\n            var xCoordinate = evt.clientX;\n            return xCoordinate - targetClientRect.left;\n        };\n        var coord = getNormalizedXCoordinate(evt);\n        selectedTextEl.ref && selectedTextEl.ref.focus();\n        foundation.handleClick(coord);\n    }, [foundation, selectedTextEl.ref, rootEl.ref]);\n    var handleKeydown = useCallback(function (evt) {\n        var _a;\n        (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n        foundation.handleKeydown(evt);\n    }, [foundation, props.onKeyDown]);\n    var handleMenuSelected = useCallback(function (index) {\n        selectedIndex.current = index;\n        foundation.handleMenuItemAction(index);\n    }, [foundation]);\n    var handleMenuOpened = useCallback(function () {\n        foundation.handleMenuOpened();\n    }, [foundation]);\n    var handleMenuClosed = useCallback(function () {\n        setMenuOpen(false);\n        foundation.handleMenuClosed();\n    }, [foundation]);\n    // For controlled selects that are enhanced\n    // we need to jump through some checks to see if we need to update the\n    // value in our foundation\n    var foundationValue = foundation.getValue();\n    // Use the value OR the default value if there is no index selected\n    var value = (_a = props.value) !== null && _a !== void 0 ? _a : (selectedIndex.current === -1 ? props.defaultValue : undefined);\n    // Use the length of the options as an indication we need to re-render and\n    // check if our value is accurate. This is for situations where people populate the select\n    // async. We can't rely on object identity since lots of people pass options inline.\n    var optionsLength = Array.isArray(props.options)\n        ? props.options.length\n        : Object.values(props.options || {}).length;\n    // MDC Select is a bit of a mess here...\n    // - We have to set our value\n    // - In the event of a controlled value change, we don't want to fire a change event\n    // - Jump through stupid hoops to prevent the event from firing\n    useEffect(function () {\n        silenceChange.current = true;\n        if (value !== undefined && value !== foundationValue) {\n            // @ts-ignore unsafe private variable access\n            var index = foundation.menuItemValues_.indexOf(value);\n            selectedIndex.current = index;\n            foundation.setValue(value || '');\n        }\n        raf(function () {\n            silenceChange.current = false;\n        });\n    }, [value, foundationValue, optionsLength, foundation]);\n    // Disabled\n    useEffect(function () {\n        foundation.setDisabled(!!props.disabled);\n    }, [foundation, props.disabled]);\n    // Set anchor\n    useEffect(function () {\n        var _a;\n        rootEl.ref && ((_a = menu.current) === null || _a === void 0 ? void 0 : _a.setAnchorElement(rootEl.ref));\n    }, [rootEl.ref]);\n    return __assign({ notchWidth: notchWidth,\n        menuOpen: menuOpen,\n        lineRippleActive: lineRippleActive,\n        lineRippleCenter: lineRippleCenter,\n        floatLabel: floatLabel, selectedIndex: selectedIndex.current, selectedTextContent: selectedTextContent,\n        setFloatingLabel: setFloatingLabel,\n        setMenu: setMenu,\n        setLeadingIcon: setLeadingIcon,\n        setNativeControl: setNativeControl,\n        handleFocus: handleFocus,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        handleKeydown: handleKeydown,\n        handleMenuClosed: handleMenuClosed,\n        handleMenuOpened: handleMenuOpened,\n        handleMenuSelected: handleMenuSelected }, elements);\n};\n"]},"metadata":{},"sourceType":"module"}