{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { useClassNames, Tag, useId, createComponent } from '@rmwc/base';\nimport { Icon } from '@rmwc/icon';\nimport { LineRipple } from '@rmwc/line-ripple';\nimport { FloatingLabel } from '@rmwc/floating-label';\nimport { NotchedOutline } from '@rmwc/notched-outline';\nimport { withRipple } from '@rmwc/ripple';\nimport { useTextFieldIconFoundation } from './textfield-icon-foundation';\nimport { useTextFieldCharacterCountFoundation } from './textfield-character-count-foundation';\nimport { useTextFieldFoundation } from './textfield-foundation';\n/** A TextField component for accepting text input from a user. */\n\nexport var TextField = createComponent(function TextField(props, ref) {\n  var label = props.label,\n      style = props.style,\n      outlined = props.outlined,\n      align = props.align,\n      fullwidth = props.fullwidth,\n      invalid = props.invalid,\n      disabled = props.disabled,\n      helpText = props.helpText,\n      children = props.children,\n      textarea = props.textarea,\n      inputRef = props.inputRef,\n      characterCount = props.characterCount,\n      icon = props.icon,\n      trailingIcon = props.trailingIcon,\n      _a = props.rootProps,\n      rootProps = _a === void 0 ? {} : _a,\n      foundationRef = props.foundationRef,\n      ripple = props.ripple,\n      userFloatLabel = props.floatLabel,\n      rest = __rest(props, [\"label\", \"style\", \"outlined\", \"align\", \"fullwidth\", \"invalid\", \"disabled\", \"helpText\", \"children\", \"textarea\", \"inputRef\", \"characterCount\", \"icon\", \"trailingIcon\", \"rootProps\", \"foundationRef\", \"ripple\", \"floatLabel\"]);\n\n  var _b = useTextFieldFoundation(props),\n      rootEl = _b.rootEl,\n      inputEl = _b.inputEl,\n      shakeLabel = _b.shakeLabel,\n      floatLabel = _b.floatLabel,\n      notchWidth = _b.notchWidth,\n      lineRippleActive = _b.lineRippleActive,\n      lineRippleCenter = _b.lineRippleCenter,\n      setLeadingIcon = _b.setLeadingIcon,\n      setTrailingIcon = _b.setTrailingIcon,\n      setFloatingLabel = _b.setFloatingLabel,\n      setCharacterCounter = _b.setCharacterCounter;\n\n  var id = useId('textfield', props);\n  var labelId = id + '-label';\n  var className = useClassNames(props, ['mdc-text-field', 'mdc-text-field--upgraded', {\n    'mdc-text-field--textarea': textarea,\n    'mdc-text-field--fullwidth': fullwidth,\n    'mdc-text-field--outlined': outlined,\n    'mdc-text-field--invalid': invalid,\n    'mdc-text-field--disabled': disabled,\n    'mdc-text-field--with-leading-icon': !!icon,\n    'mdc-text-field--with-trailing-icon': !!trailingIcon,\n    'mdc-text-field--no-label': !label,\n    'mdc-text-field--end-aligned': align === 'end'\n  }]); // handle leading and trailing icons\n\n  var renderIcon = function renderIcon(icon, position) {\n    return React.createElement(TextFieldIcon, {\n      apiRef: function apiRef(api) {\n        position === 'leading' ? setLeadingIcon(api) : setTrailingIcon(api);\n      },\n      position: position,\n      tabIndex: position === 'trailing' ? 0 : undefined,\n      icon: icon\n    });\n  };\n\n  var renderHelpText = function renderHelpText(renderedCharacterCounter) {\n    var shouldRender = !!helpText || characterCount && !textarea;\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    var shouldSpread = typeof helpText === 'object' && !React.isValidElement(helpText);\n    return React.createElement(\"div\", {\n      className: \"mdc-text-field-helper-line\"\n    }, helpText && shouldSpread ? React.createElement(TextFieldHelperText, __assign({}, helpText)) : React.createElement(TextFieldHelperText, null, helpText), !textarea && renderedCharacterCounter);\n  };\n\n  var renderedLabel = label ? React.createElement(FloatingLabel, {\n    shake: shakeLabel,\n    float: floatLabel,\n    apiRef: setFloatingLabel,\n    id: labelId\n  }, label) : null;\n  var renderedCharacterCounter = characterCount ? React.createElement(TextFieldCharacterCount, {\n    apiRef: setCharacterCounter\n  }) : null;\n  return React.createElement(React.Fragment, null, React.createElement(TextFieldRoot, __assign({}, rootProps, {\n    element: rootEl,\n    style: style,\n    className: className,\n    ref: ref,\n    \"aria-labelledby\": labelId\n  }), !!icon && renderIcon(icon, 'leading'), children, !!textarea && renderedCharacterCounter, React.createElement(TextFieldRipple, null), React.createElement(Tag, __assign({}, rest, {\n    element: inputEl,\n    className: \"mdc-text-field__input\",\n    disabled: disabled,\n    tag: textarea ? 'textarea' : 'input',\n    ref: inputRef\n  })), !!outlined ? React.createElement(React.Fragment, null, React.createElement(NotchedOutline, {\n    notch: notchWidth\n  }, renderedLabel), !!trailingIcon && renderIcon(trailingIcon, 'trailing')) : React.createElement(React.Fragment, null, renderedLabel, !!trailingIcon && renderIcon(trailingIcon, 'trailing'), React.createElement(LineRipple, {\n    active: lineRippleActive,\n    center: lineRippleCenter\n  }))), renderHelpText(renderedCharacterCounter));\n});\nvar TextFieldRipple = React.memo(function TextFieldRipple() {\n  return React.createElement(\"span\", {\n    className: \"mdc-text-field__ripple\"\n  });\n});\nvar TextFieldRoot = withRipple({\n  surface: false\n})(React.forwardRef(function TextFieldRoot(props, ref) {\n  return React.createElement(Tag, __assign({}, props, {\n    tag: \"label\",\n    ref: ref\n  }));\n}));\nvar TextFieldCharacterCount = React.memo(function TextFieldCharacterCount(props) {\n  var content = useTextFieldCharacterCountFoundation(props).content;\n  return React.createElement(\"div\", {\n    className: \"mdc-text-field-character-counter\"\n  }, content);\n});\n/** A help text component */\n\nexport var TextFieldHelperText = createComponent(function TextFieldHelperText(props, ref) {\n  var persistent = props.persistent,\n      validationMsg = props.validationMsg,\n      rest = __rest(props, [\"persistent\", \"validationMsg\"]);\n\n  var className = useClassNames(props, ['mdc-text-field-helper-text', {\n    'mdc-text-field-helper-text--persistent': persistent,\n    'mdc-text-field-helper-text--validation-msg': validationMsg\n  }]);\n  return React.createElement(Tag, __assign({\n    tag: \"p\"\n  }, rest, {\n    className: className,\n    ref: ref\n  }));\n});\n/** An Icon in a TextField */\n\nvar TextFieldIcon = function TextFieldIcon(props) {\n  var apiRef = props.apiRef,\n      position = props.position,\n      rest = __rest(props, [\"apiRef\", \"position\"]);\n\n  var rootEl = useTextFieldIconFoundation(props).rootEl;\n  var className = useClassNames(props, ['mdc-text-field__icon', {\n    'mdc-text-field__icon--trailing': position === 'trailing',\n    'mdc-text-field__icon--leading': position === 'leading'\n  }]);\n  return React.createElement(Icon, __assign({}, rootEl.props(__assign(__assign({}, rest), {\n    className: className\n  }))));\n};\n\nTextFieldIcon.displayName = 'TextFieldIcon';","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/node_modules/@rmwc/textfield/next/index.js"],"names":["__assign","__rest","React","useClassNames","Tag","useId","createComponent","Icon","LineRipple","FloatingLabel","NotchedOutline","withRipple","useTextFieldIconFoundation","useTextFieldCharacterCountFoundation","useTextFieldFoundation","TextField","props","ref","label","style","outlined","align","fullwidth","invalid","disabled","helpText","children","textarea","inputRef","characterCount","icon","trailingIcon","_a","rootProps","foundationRef","ripple","userFloatLabel","floatLabel","rest","_b","rootEl","inputEl","shakeLabel","notchWidth","lineRippleActive","lineRippleCenter","setLeadingIcon","setTrailingIcon","setFloatingLabel","setCharacterCounter","id","labelId","className","renderIcon","position","createElement","TextFieldIcon","apiRef","api","tabIndex","undefined","renderHelpText","renderedCharacterCounter","shouldRender","shouldSpread","isValidElement","TextFieldHelperText","renderedLabel","shake","float","TextFieldCharacterCount","Fragment","TextFieldRoot","element","TextFieldRipple","tag","notch","active","center","memo","surface","forwardRef","content","persistent","validationMsg","displayName"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport React from 'react';\nimport { useClassNames, Tag, useId, createComponent } from '@rmwc/base';\nimport { Icon } from '@rmwc/icon';\nimport { LineRipple } from '@rmwc/line-ripple';\nimport { FloatingLabel } from '@rmwc/floating-label';\nimport { NotchedOutline } from '@rmwc/notched-outline';\nimport { withRipple } from '@rmwc/ripple';\nimport { useTextFieldIconFoundation } from './textfield-icon-foundation';\nimport { useTextFieldCharacterCountFoundation } from './textfield-character-count-foundation';\nimport { useTextFieldFoundation } from './textfield-foundation';\n/** A TextField component for accepting text input from a user. */\nexport var TextField = createComponent(function TextField(props, ref) {\n    var label = props.label, style = props.style, outlined = props.outlined, align = props.align, fullwidth = props.fullwidth, invalid = props.invalid, disabled = props.disabled, helpText = props.helpText, children = props.children, textarea = props.textarea, inputRef = props.inputRef, characterCount = props.characterCount, icon = props.icon, trailingIcon = props.trailingIcon, _a = props.rootProps, rootProps = _a === void 0 ? {} : _a, foundationRef = props.foundationRef, ripple = props.ripple, userFloatLabel = props.floatLabel, rest = __rest(props, [\"label\", \"style\", \"outlined\", \"align\", \"fullwidth\", \"invalid\", \"disabled\", \"helpText\", \"children\", \"textarea\", \"inputRef\", \"characterCount\", \"icon\", \"trailingIcon\", \"rootProps\", \"foundationRef\", \"ripple\", \"floatLabel\"]);\n    var _b = useTextFieldFoundation(props), rootEl = _b.rootEl, inputEl = _b.inputEl, shakeLabel = _b.shakeLabel, floatLabel = _b.floatLabel, notchWidth = _b.notchWidth, lineRippleActive = _b.lineRippleActive, lineRippleCenter = _b.lineRippleCenter, setLeadingIcon = _b.setLeadingIcon, setTrailingIcon = _b.setTrailingIcon, setFloatingLabel = _b.setFloatingLabel, setCharacterCounter = _b.setCharacterCounter;\n    var id = useId('textfield', props);\n    var labelId = id + '-label';\n    var className = useClassNames(props, [\n        'mdc-text-field',\n        'mdc-text-field--upgraded',\n        {\n            'mdc-text-field--textarea': textarea,\n            'mdc-text-field--fullwidth': fullwidth,\n            'mdc-text-field--outlined': outlined,\n            'mdc-text-field--invalid': invalid,\n            'mdc-text-field--disabled': disabled,\n            'mdc-text-field--with-leading-icon': !!icon,\n            'mdc-text-field--with-trailing-icon': !!trailingIcon,\n            'mdc-text-field--no-label': !label,\n            'mdc-text-field--end-aligned': align === 'end'\n        }\n    ]);\n    // handle leading and trailing icons\n    var renderIcon = function (icon, position) {\n        return (React.createElement(TextFieldIcon, { apiRef: function (api) {\n                position === 'leading' ? setLeadingIcon(api) : setTrailingIcon(api);\n            }, position: position, tabIndex: position === 'trailing' ? 0 : undefined, icon: icon }));\n    };\n    var renderHelpText = function (renderedCharacterCounter) {\n        var shouldRender = !!helpText || (characterCount && !textarea);\n        if (!shouldRender) {\n            return null;\n        }\n        var shouldSpread = typeof helpText === 'object' && !React.isValidElement(helpText);\n        return (React.createElement(\"div\", { className: \"mdc-text-field-helper-line\" },\n            helpText && shouldSpread ? (React.createElement(TextFieldHelperText, __assign({}, helpText))) : (React.createElement(TextFieldHelperText, null, helpText)),\n            !textarea && renderedCharacterCounter));\n    };\n    var renderedLabel = label ? (React.createElement(FloatingLabel, { shake: shakeLabel, float: floatLabel, apiRef: setFloatingLabel, id: labelId }, label)) : null;\n    var renderedCharacterCounter = characterCount ? (React.createElement(TextFieldCharacterCount, { apiRef: setCharacterCounter })) : null;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TextFieldRoot, __assign({}, rootProps, { element: rootEl, style: style, className: className, ref: ref, \"aria-labelledby\": labelId }),\n            !!icon && renderIcon(icon, 'leading'),\n            children,\n            !!textarea && renderedCharacterCounter,\n            React.createElement(TextFieldRipple, null),\n            React.createElement(Tag, __assign({}, rest, { element: inputEl, className: \"mdc-text-field__input\", disabled: disabled, tag: textarea ? 'textarea' : 'input', ref: inputRef })),\n            !!outlined ? (React.createElement(React.Fragment, null,\n                React.createElement(NotchedOutline, { notch: notchWidth }, renderedLabel),\n                !!trailingIcon && renderIcon(trailingIcon, 'trailing'))) : (React.createElement(React.Fragment, null,\n                renderedLabel,\n                !!trailingIcon && renderIcon(trailingIcon, 'trailing'),\n                React.createElement(LineRipple, { active: lineRippleActive, center: lineRippleCenter })))),\n        renderHelpText(renderedCharacterCounter)));\n});\nvar TextFieldRipple = React.memo(function TextFieldRipple() {\n    return React.createElement(\"span\", { className: \"mdc-text-field__ripple\" });\n});\nvar TextFieldRoot = withRipple({ surface: false })(React.forwardRef(function TextFieldRoot(props, ref) {\n    return React.createElement(Tag, __assign({}, props, { tag: \"label\", ref: ref }));\n}));\nvar TextFieldCharacterCount = React.memo(function TextFieldCharacterCount(props) {\n    var content = useTextFieldCharacterCountFoundation(props).content;\n    return React.createElement(\"div\", { className: \"mdc-text-field-character-counter\" }, content);\n});\n/** A help text component */\nexport var TextFieldHelperText = createComponent(function TextFieldHelperText(props, ref) {\n    var persistent = props.persistent, validationMsg = props.validationMsg, rest = __rest(props, [\"persistent\", \"validationMsg\"]);\n    var className = useClassNames(props, [\n        'mdc-text-field-helper-text',\n        {\n            'mdc-text-field-helper-text--persistent': persistent,\n            'mdc-text-field-helper-text--validation-msg': validationMsg\n        }\n    ]);\n    return React.createElement(Tag, __assign({ tag: \"p\" }, rest, { className: className, ref: ref }));\n});\n/** An Icon in a TextField */\nvar TextFieldIcon = function TextFieldIcon(props) {\n    var apiRef = props.apiRef, position = props.position, rest = __rest(props, [\"apiRef\", \"position\"]);\n    var rootEl = useTextFieldIconFoundation(props).rootEl;\n    var className = useClassNames(props, [\n        'mdc-text-field__icon',\n        {\n            'mdc-text-field__icon--trailing': position === 'trailing',\n            'mdc-text-field__icon--leading': position === 'leading'\n        }\n    ]);\n    return (React.createElement(Icon, __assign({}, rootEl.props(__assign(__assign({}, rest), { className: className })))));\n};\nTextFieldIcon.displayName = 'TextFieldIcon';\n"]},"metadata":{},"sourceType":"module"}