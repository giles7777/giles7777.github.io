{"ast":null,"code":"import worker from \"./AgentWorker\";\nimport WebWorker from \"./workerSetup\";\nexport class Agent {\n  constructor(context, id, size, x, y, z, rotx = 0, roty = 0, rotz = 0) {\n    this.THREE = context;\n    this.id = id;\n    this.size = size;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.rotx = rotx;\n    this.roty = roty;\n    this.rotz = rotz;\n    this.state = 0;\n    this.createMesh();\n    this.worker = new WebWorker(worker);\n    this.worker.postMessage({\n      command: \"init\"\n    });\n  }\n\n  createMesh() {\n    this.geometry = new this.THREE.SphereGeometry(this.size, 24, 24, 0, Math.PI * 2, 0, Math.PI / 2);\n    this.material = new this.THREE.MeshBasicMaterial({\n      color: 0xFFFFFF\n    });\n    this.mesh = new this.THREE.Mesh(this.geometry, this.material);\n    this.mesh.position.copy(new this.THREE.Vector3(this.x, this.y, this.z));\n    this.mesh.rotation.x = this.rotx;\n    this.mesh.rotation.y = this.roty;\n    this.mesh.rotation.z = this.rotz;\n  }\n\n  getMesh() {\n    return this.mesh;\n  } // Update rendering attributes\n\n\n  updateRender() {} // Simulation methods\n\n\n  loop() {}\n\n  addNeighbor(id) {}\n\n  removeNeighbor(id) {}\n\n  receiveMessage(msg) {} // simulator.sendMessage(id,msg) - Sends a message to another Agent.  Has a variable delay\n\n\n}","map":{"version":3,"sources":["C:/cygwin64/home/giles/projs/personal/getalife/prototype/src/Agent.js"],"names":["worker","WebWorker","Agent","constructor","context","id","size","x","y","z","rotx","roty","rotz","THREE","state","createMesh","postMessage","command","geometry","SphereGeometry","Math","PI","material","MeshBasicMaterial","color","mesh","Mesh","position","copy","Vector3","rotation","getMesh","updateRender","loop","addNeighbor","removeNeighbor","receiveMessage","msg"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,OAAO,MAAMC,KAAN,CAAY;AACjBC,EAAAA,WAAW,CAACC,OAAD,EAASC,EAAT,EAAYC,IAAZ,EAAiBC,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,IAAI,GAAC,CAA5B,EAA8BC,IAAI,GAAC,CAAnC,EAAqCC,IAAI,GAAC,CAA1C,EAA6C;AACtD,SAAKC,KAAL,GAAaT,OAAb;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,KAAL,GAAa,CAAb;AAEA,SAAKC,UAAL;AAEA,SAAKf,MAAL,GAAc,IAAIC,SAAJ,CAAcD,MAAd,CAAd;AACA,SAAKA,MAAL,CAAYgB,WAAZ,CAAwB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAxB;AACD;;AAEDF,EAAAA,UAAU,GAAG;AACX,SAAKG,QAAL,GAAgB,IAAI,KAAKL,KAAL,CAAWM,cAAf,CAA8B,KAAKb,IAAnC,EAAyC,EAAzC,EAA6C,EAA7C,EAAgD,CAAhD,EAAkDc,IAAI,CAACC,EAAL,GAAQ,CAA1D,EAA4D,CAA5D,EAA8DD,IAAI,CAACC,EAAL,GAAQ,CAAtE,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAI,KAAKT,KAAL,CAAWU,iBAAf,CAAiC;AAC/CC,MAAAA,KAAK,EAAE;AADwC,KAAjC,CAAhB;AAGA,SAAKC,IAAL,GAAY,IAAI,KAAKZ,KAAL,CAAWa,IAAf,CAAoB,KAAKR,QAAzB,EAAmC,KAAKI,QAAxC,CAAZ;AACA,SAAKG,IAAL,CAAUE,QAAV,CAAmBC,IAAnB,CAAwB,IAAI,KAAKf,KAAL,CAAWgB,OAAf,CAAuB,KAAKtB,CAA5B,EAA8B,KAAKC,CAAnC,EAAqC,KAAKC,CAA1C,CAAxB;AACA,SAAKgB,IAAL,CAAUK,QAAV,CAAmBvB,CAAnB,GAAuB,KAAKG,IAA5B;AACA,SAAKe,IAAL,CAAUK,QAAV,CAAmBtB,CAAnB,GAAuB,KAAKG,IAA5B;AACA,SAAKc,IAAL,CAAUK,QAAV,CAAmBrB,CAAnB,GAAuB,KAAKG,IAA5B;AACD;;AAEDmB,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKN,IAAZ;AACD,GAjCgB,CAmCjB;;;AACAO,EAAAA,YAAY,GAAG,CACd,CArCgB,CAuCjB;;;AACAC,EAAAA,IAAI,GAAG,CAEN;;AAEDC,EAAAA,WAAW,CAAC7B,EAAD,EAAK,CAEf;;AAED8B,EAAAA,cAAc,CAAC9B,EAAD,EAAK,CAElB;;AAED+B,EAAAA,cAAc,CAACC,GAAD,EAAM,CAEnB,CAtDgB,CAwDjB;;;AAxDiB","sourcesContent":["import worker from \"./AgentWorker\"\r\nimport WebWorker from \"./workerSetup\"\r\n\r\nexport class Agent {\r\n  constructor(context,id,size,x,y,z,rotx=0,roty=0,rotz=0) {\r\n    this.THREE = context;\r\n    this.id = id;\r\n    this.size = size;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.rotx = rotx;\r\n    this.roty = roty;\r\n    this.rotz = rotz;\r\n    this.state = 0;\r\n\r\n    this.createMesh();\r\n\r\n    this.worker = new WebWorker(worker);\r\n    this.worker.postMessage({command:\"init\"});\r\n  }\r\n\r\n  createMesh() {\r\n    this.geometry = new this.THREE.SphereGeometry(this.size, 24, 24,0,Math.PI*2,0,Math.PI/2);\r\n    this.material = new this.THREE.MeshBasicMaterial({\r\n      color: 0xFFFFFF,\r\n    });\r\n    this.mesh = new this.THREE.Mesh(this.geometry, this.material);\r\n    this.mesh.position.copy(new this.THREE.Vector3(this.x,this.y,this.z));\r\n    this.mesh.rotation.x = this.rotx;\r\n    this.mesh.rotation.y = this.roty;\r\n    this.mesh.rotation.z = this.rotz;\r\n  }\r\n\r\n  getMesh() {\r\n    return this.mesh;\r\n  }\r\n\r\n  // Update rendering attributes\r\n  updateRender() {\r\n  }\r\n\r\n  // Simulation methods\r\n  loop() {\r\n\r\n  }\r\n\r\n  addNeighbor(id) {\r\n\r\n  }\r\n\r\n  removeNeighbor(id) {\r\n\r\n  }\r\n\r\n  receiveMessage(msg) {\r\n\r\n  }\r\n\r\n  // simulator.sendMessage(id,msg) - Sends a message to another Agent.  Has a variable delay\r\n}\r\n"]},"metadata":{},"sourceType":"module"}